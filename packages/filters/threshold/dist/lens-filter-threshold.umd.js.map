{"version":3,"file":"lens-filter-threshold.umd.js","sources":["../src/index.js"],"sourcesContent":["import { applyFilter } from 'lens-core';\n\n/**\n * Iterate over the array applying the threshold transformation\n * @param {Array} data\n * @param {Number} length\n * @param {Object} options\n */\nexport const transform = ({ data, length, options }) => {\n    for (let i = 0; i < length; i += 4) {\n        const r = data[i];\n        const g = data[i + 1];\n        const b = data[i + 2];\n        const v =\n            0.2126 * r + 0.7152 * g + 0.0722 * b >= options.threshold ? 255 : 0;\n        data[i] = data[i + 1] = data[i + 2] = v;\n    }\n\n    return data;\n};\n\n/**\n * @param {ImageData} data - data of a image extracted from a canvas\n * @param {Object} options - options to pass to the transformation function\n * @param {Number} [options.threshold] - threshold to apply in the transformation\n * @param {Number} nWorkers - number of workers\n * @returns {Promise}\n */\nexport default function threshold({ data, options, nWorkers } = {}) {\n    if (!data || !options || !options.threshold) {\n        throw new Error('lens-filter-threshold:: invalid options provided');\n    }\n\n    return applyFilter({ data, transform, options, nWorkers });\n}\n"],"names":["transform","data","length","options","i","v","threshold","nWorkers","Error","applyFilter"],"mappings":"wPAQaA,EAAY,oBAAGC,IAAAA,KAAMC,IAAAA,OAAQC,IAAAA,QAC7BC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,KAI1BC,EACF,MAJMJ,EAAKG,GAIE,MAHPH,EAAKG,EAAI,GAGW,MAFpBH,EAAKG,EAAI,IAEyBD,EAAQG,UAAY,IAAM,IACjEF,GAAKH,EAAKG,EAAI,GAAKH,EAAKG,EAAI,GAAKC,SAGnCJ,2BAUI,wEAAiD,GAA5BA,IAAAA,KAAME,IAAAA,QAASI,IAAAA,aAC1CN,IAASE,IAAYA,EAAQG,gBACxB,IAAIE,MAAM,2DAGbC,cAAY,CAAER,OAAMD,YAAWG,UAASI"}