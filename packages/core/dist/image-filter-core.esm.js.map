{"version":3,"file":"image-filter-core.esm.js","sources":["../src/index.js"],"sourcesContent":["import workerize from 'workerize';\n\n/**\n* It returns a canvas with the given width and height\n* @param {Number} w - width\n* @param {Number} h - height\n* @returns {Object}\n*/\nexport function getCanvas(w, h) {\n    const canvas = document.createElement('canvas');\n    canvas.width = w;\n    canvas.height = h;\n\n    return canvas;\n}\n\n/**\n* Given a ImageData it returns the dataURL\n* @param {ImageData} imageData\n* @returns {String}\n*/\nexport function convertImageDataToCanvasURL(imageData) {\n    const canvas = window.document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = imageData.width;\n    canvas.height = imageData.height;\n    ctx.putImageData(imageData, 0, 0);\n\n    return canvas.toDataURL();\n}\n\n/**\n* Given a worker file with the transformation the work is split\n* between the configured number of workers and the transformation is applied\n* returning a Promise\n* @param {Function} worker\n* @param {Number} options\n* @returns {Promise}\n*/\nexport async function apply(data, transform, options, nWorkers) {\n    const worker = workerize(`\n        var transform = ${transform};\n\n        export function execute(canvas, index, length, options) {\n            transform(canvas.data, length, options);\n            return { result: canvas, index };\n        }\n    `); \n\n    const canvas = getCanvas(data.width, data.height);\n    const context = canvas.getContext('2d');\n    let finished = 0;\n    let blockSize;\n\n    // Drawing the source image into the target canvas\n    context.putImageData(data, 0, 0);\n\n    // Minimum number of workers = 1\n    if (!nWorkers) {\n        nWorkers = 1;\n    }\n\n    // Height of the picture chunck for every worker\n    blockSize = Math.floor(canvas.height / nWorkers);\n\n    return new Promise(async (resolve) => {\n        let height;\n\n        for (let index = 0; index < nWorkers; index++) {\n            // In the last worker we have to make sure we process whatever is missing\n            height = blockSize;\n\n            if ((index + 1) === nWorkers) {\n                height = canvas.height - (blockSize * index);\n            }\n\n            // Getting the picture\n            const canvasData = context.getImageData(0, blockSize * index, canvas.width, height);\n            const length = height * canvas.width * 4;\n            const response = await worker.execute(canvasData, index, length, options);\n\n            // Copying back canvas data to canvas\n            // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n            // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n            context.putImageData(response.result, 0, blockSize * response.index);\n\n            finished++;\n\n            if (finished === nWorkers) {\n                resolve(context.getImageData(0, 0, canvas.width, canvas.height));\n            }\n        }\n    });\n}\n"],"names":["getCanvas","w","h","canvas","document","createElement","width","height","convertImageDataToCanvasURL","imageData","window","ctx","getContext","putImageData","toDataURL","apply","data","transform","options","nWorkers","worker","workerize","context","finished","blockSize","Math","floor","Promise","resolve","index","canvasData","getImageData","length","response","execute","result"],"mappings":";;AAEA;;;;;;AAMA,AAAO,SAASA,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;UACtBC,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf;WACOC,KAAP,GAAeL,CAAf;WACOM,MAAP,GAAgBL,CAAhB;;WAEOC,MAAP;;;;;;;;AAQJ,AAAO,SAASK,2BAAT,CAAqCC,SAArC,EAAgD;UAC7CN,SAASO,OAAON,QAAP,CAAgBC,aAAhB,CAA8B,QAA9B,CAAf;UACMM,MAAMR,OAAOS,UAAP,CAAkB,IAAlB,CAAZ;WACON,KAAP,GAAeG,UAAUH,KAAzB;WACOC,MAAP,GAAgBE,UAAUF,MAA1B;QACIM,YAAJ,CAAiBJ,SAAjB,EAA4B,CAA5B,EAA+B,CAA/B;;WAEON,OAAOW,SAAP,EAAP;;;;;;;;;;;AAWJ,AAAO,eAAeC,KAAf,CAAqBC,IAArB,EAA2BC,SAA3B,EAAsCC,OAAtC,EAA+CC,QAA/C,EAAyD;UACtDC,SAASC,UAAW;0BACJJ,SAAU;;;;;;KADjB,CAAf;;UASMd,SAASH,UAAUgB,KAAKV,KAAf,EAAsBU,KAAKT,MAA3B,CAAf;UACMe,UAAUnB,OAAOS,UAAP,CAAkB,IAAlB,CAAhB;QACIW,WAAW,CAAf;QACIC,SAAJ;;;YAGQX,YAAR,CAAqBG,IAArB,EAA2B,CAA3B,EAA8B,CAA9B;;;QAGI,CAACG,QAAL,EAAe;mBACA,CAAX;;;;gBAIQM,KAAKC,KAAL,CAAWvB,OAAOI,MAAP,GAAgBY,QAA3B,CAAZ;;WAEO,IAAIQ,OAAJ,CAAY,MAAOC,OAAP,IAAmB;YAC9BrB,MAAJ;;aAEK,IAAIsB,QAAQ,CAAjB,EAAoBA,QAAQV,QAA5B,EAAsCU,OAAtC,EAA+C;;qBAElCL,SAAT;;gBAEKK,QAAQ,CAAT,KAAgBV,QAApB,EAA8B;yBACjBhB,OAAOI,MAAP,GAAiBiB,YAAYK,KAAtC;;;;kBAIEC,aAAaR,QAAQS,YAAR,CAAqB,CAArB,EAAwBP,YAAYK,KAApC,EAA2C1B,OAAOG,KAAlD,EAAyDC,MAAzD,CAAnB;kBACMyB,SAASzB,SAASJ,OAAOG,KAAhB,GAAwB,CAAvC;kBACM2B,WAAW,MAAMb,OAAOc,OAAP,CAAeJ,UAAf,EAA2BD,KAA3B,EAAkCG,MAAlC,EAA0Cd,OAA1C,CAAvB;;;;;oBAKQL,YAAR,CAAqBoB,SAASE,MAA9B,EAAsC,CAAtC,EAAyCX,YAAYS,SAASJ,KAA9D;;;;gBAIIN,aAAaJ,QAAjB,EAA2B;wBACfG,QAAQS,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B5B,OAAOG,KAAlC,EAAyCH,OAAOI,MAAhD,CAAR;;;KAxBL,CAAP;;;;;"}