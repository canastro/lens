{"version":3,"file":"lens-chainable.umd.js","sources":["../node_modules/lens-core/dist/lens-core.umd.js","../node_modules/lens-filter-brightness/dist/lens-filter-brightness.umd.js","../node_modules/lens-filter-color/dist/lens-filter-color.umd.js","../node_modules/lens-filter-colorize/dist/lens-filter-color.umd.js","../node_modules/lens-filter-contrast/dist/lens-filter-contrast.umd.js","../node_modules/lens-filter-gamma/dist/lens-filter-gamma.umd.js","../node_modules/lens-filter-grayscale/dist/lens-filter-grayscale.umd.js","../node_modules/lens-filter-invert/dist/lens-filter-grayscale.umd.js","../node_modules/lens-filter-noise/dist/lens-filter-noise.umd.js","../node_modules/lens-filter-sepia/dist/lens-filter-sepia.umd.js","../node_modules/lens-filter-threshold/dist/lens-filter-threshold.umd.js","../src/utils.js","../src/index.js"],"sourcesContent":["(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? factory()\n        : typeof define === 'function' && define.amd\n            ? define(factory)\n            : factory();\n})(this, function() {\n    'use strict';\n\n    function e(e, t, n) {\n        e.addEventListener('message', function(r) {\n            var o = r.data,\n                a = o.id;\n            if ('RPC' === o.type && null != a)\n                if (o.method) {\n                    var s = t[o.method];\n                    null == s\n                        ? e.postMessage({\n                              type: 'RPC',\n                              id: a,\n                              error: 'NO_SUCH_METHOD'\n                          })\n                        : Promise.resolve()\n                              .then(function() {\n                                  return s.apply(null, o.params);\n                              })\n                              .then(function(t) {\n                                  e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      result: t\n                                  });\n                              })\n                              .catch(function(t) {\n                                  e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      error: '' + t\n                                  });\n                              });\n                } else {\n                    var i = n[a];\n                    if (null == i) throw Error('Unknown callback ' + a);\n                    delete n[a],\n                        o.error ? i[1](Error(o.error)) : i[0](o.result);\n                }\n        });\n    }\n    function workerize(t, n) {\n        var r = this,\n            o = {},\n            a =\n                '__xpo' +\n                Math.random()\n                    .toString()\n                    .substring(2) +\n                '__';\n        'function' == typeof t &&\n            (t = '(' + Function.prototype.toString.call(t) + ')(' + a + ')'),\n            (t =\n                (function(e, t, n) {\n                    return (\n                        (e = (e = e.replace(\n                            /^(\\s*)export\\s+default\\s+/m,\n                            function(e, r) {\n                                return (\n                                    (n.default = !0), '' + r + t + '.default='\n                                );\n                            }\n                        )).replace(\n                            /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n                            function(e, r, o, a, s) {\n                                return (\n                                    (n[s] = !0),\n                                    '' + r + t + '.' + s + '=' + o + a + s\n                                );\n                            }\n                        )),\n                        'var ' + t + '={};\\n' + e + '\\n' + t + ';'\n                    );\n                })(t, a, o) +\n                '\\n(' +\n                Function.prototype.toString.call(e) +\n                ')(self,' +\n                a +\n                ',{})');\n        var s,\n            i = URL.createObjectURL(new Blob([t])),\n            l = new Worker(i, n),\n            c = l.terminate,\n            u = {},\n            p = 0;\n        for (s in ((l.kill = function(e) {\n            l.postMessage({ type: 'KILL', signal: e }), setTimeout(l.terminate);\n        }),\n        (l.terminate = function() {\n            URL.revokeObjectURL(i), c.call(r);\n        }),\n        (l.call = function(e, t) {\n            return new Promise(function(n, r) {\n                var o = 'rpc' + ++p;\n                (u[o] = [n, r]),\n                    l.postMessage({ type: 'RPC', id: o, method: e, params: t });\n            });\n        }),\n        (l.rpcMethods = {}),\n        e(l, l.rpcMethods, u),\n        (l.expose = function(e) {\n            l[s] = function() {\n                return l.call(e, [].slice.call(arguments));\n            };\n        }),\n        o))\n            s in l || l.expose(s);\n        return l;\n    }\n\n    /**\n     * It returns a canvas with the given width and height\n     * @param {Number} w - width\n     * @param {Number} h - height\n     * @returns {Object}\n     */\n    function getCanvas(w, h) {\n        var canvas = document.createElement('canvas');\n        canvas.width = w;\n        canvas.height = h;\n\n        return canvas;\n    }\n\n    /**\n     * Given a ImageData it returns the dataURL\n     * @param {ImageData} imageData\n     * @returns {String}\n     */\n    function convertImageDataToCanvasURL(imageData) {\n        var canvas = window.document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        canvas.width = imageData.width;\n        canvas.height = imageData.height;\n        ctx.putImageData(imageData, 0, 0);\n\n        return canvas.toDataURL();\n    }\n\n    /**\n     * Given a worker file with the transformation the work is split\n     * between the configured number of workers and the transformation is applied\n     * returning a Promise\n     * @param {Object} data - image data\n     * @param {Function} transform - transformation function\n     * @param {Object} options - object to be passed to the transform function\n     * @param {Number} nWorkers - number of workers to transform the image\n     * @returns {Promise}\n     */\n    function applyFilter(_ref) {\n        var data = _ref.data,\n            transform = _ref.transform,\n            options = _ref.options,\n            nWorkers = _ref.nWorkers;\n\n        var worker = workerize(\n            '\\n        var transform = ' +\n                transform +\n                ';\\n\\n        export function execute(canvas, index, length, options) {\\n            canvas.data = transform({ \\n                data: canvas.data, \\n                length: length, \\n                options: options\\n            });\\n\\n            return { result: canvas, index: index };\\n        }\\n    '\n        );\n\n        // Drawing the source image into the target canvas\n        var canvas = getCanvas(data.width, data.height);\n        var context = canvas.getContext('2d');\n        context.putImageData(data, 0, 0);\n\n        // Minimium 1 worker\n        nWorkers = nWorkers || 1;\n\n        // Height of the picture chunck for every worker\n        var blockSize = Math.floor(canvas.height / nWorkers);\n\n        return new Promise(function(resolve) {\n            var finished = 0;\n            var height = void 0;\n\n            for (var index = 0; index < nWorkers; index++) {\n                // In the last worker we have to make sure we process whatever is missing\n                height = blockSize;\n\n                if (index + 1 === nWorkers) {\n                    height = canvas.height - blockSize * index;\n                }\n\n                // Getting the picture\n                var canvasData = context.getImageData(\n                    0,\n                    blockSize * index,\n                    canvas.width,\n                    height\n                );\n                var length = height * canvas.width * 4;\n\n                worker\n                    .execute(canvasData, index, length, options)\n                    .then(function(response) {\n                        // Copying back canvas data to canvas\n                        // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                        // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                        context.putImageData(\n                            response.result,\n                            0,\n                            blockSize * response.index\n                        );\n\n                        finished++;\n\n                        if (finished === nWorkers) {\n                            resolve(\n                                context.getImageData(\n                                    0,\n                                    0,\n                                    canvas.width,\n                                    canvas.height\n                                )\n                            );\n                        }\n                    });\n            }\n        });\n    }\n\n    exports.getCanvas = getCanvas;\n    exports.convertImageDataToCanvasURL = convertImageDataToCanvasURL;\n    exports.applyFilter = applyFilter;\n});\n//# sourceMappingURL=lens-core.umd.js.map\n","(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? factory(exports)\n        : typeof define === 'function' && define.amd\n            ? define(['exports'], factory)\n            : factory((global.lensFilterBrightness = {}));\n})(this, function(exports) {\n    'use strict';\n\n    var commonjsGlobal =\n        typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : typeof self !== 'undefined'\n                    ? self\n                    : {};\n\n    function createCommonjsModule(fn, module) {\n        return (\n            (module = { exports: {} }),\n            fn(module, module.exports),\n            module.exports\n        );\n    }\n\n    var lensCore_umd = createCommonjsModule(function(module, exports) {\n        (function(global, factory) {\n            factory();\n        })(commonjsGlobal, function() {\n            function e(e, t, n) {\n                e.addEventListener('message', function(r) {\n                    var o = r.data,\n                        a = o.id;\n                    if ('RPC' === o.type && null != a)\n                        if (o.method) {\n                            var s = t[o.method];\n                            null == s\n                                ? e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      error: 'NO_SUCH_METHOD'\n                                  })\n                                : Promise.resolve()\n                                      .then(function() {\n                                          return s.apply(null, o.params);\n                                      })\n                                      .then(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              result: t\n                                          });\n                                      })\n                                      .catch(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              error: '' + t\n                                          });\n                                      });\n                        } else {\n                            var i = n[a];\n                            if (null == i) throw Error('Unknown callback ' + a);\n                            delete n[a],\n                                o.error ? i[1](Error(o.error)) : i[0](o.result);\n                        }\n                });\n            }\n            function workerize(t, n) {\n                var r = this,\n                    o = {},\n                    a =\n                        '__xpo' +\n                        Math.random()\n                            .toString()\n                            .substring(2) +\n                        '__';\n                'function' == typeof t &&\n                    (t =\n                        '(' +\n                        Function.prototype.toString.call(t) +\n                        ')(' +\n                        a +\n                        ')'),\n                    (t =\n                        (function(e, t, n) {\n                            return (\n                                (e = (e = e.replace(\n                                    /^(\\s*)export\\s+default\\s+/m,\n                                    function(e, r) {\n                                        return (\n                                            (n.default = !0),\n                                            '' + r + t + '.default='\n                                        );\n                                    }\n                                )).replace(\n                                    /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n                                    function(e, r, o, a, s) {\n                                        return (\n                                            (n[s] = !0),\n                                            '' +\n                                                r +\n                                                t +\n                                                '.' +\n                                                s +\n                                                '=' +\n                                                o +\n                                                a +\n                                                s\n                                        );\n                                    }\n                                )),\n                                'var ' + t + '={};\\n' + e + '\\n' + t + ';'\n                            );\n                        })(t, a, o) +\n                        '\\n(' +\n                        Function.prototype.toString.call(e) +\n                        ')(self,' +\n                        a +\n                        ',{})');\n                var s,\n                    i = URL.createObjectURL(new Blob([t])),\n                    l = new Worker(i, n),\n                    c = l.terminate,\n                    u = {},\n                    p = 0;\n                for (s in ((l.kill = function(e) {\n                    l.postMessage({ type: 'KILL', signal: e }),\n                        setTimeout(l.terminate);\n                }),\n                (l.terminate = function() {\n                    URL.revokeObjectURL(i), c.call(r);\n                }),\n                (l.call = function(e, t) {\n                    return new Promise(function(n, r) {\n                        var o = 'rpc' + ++p;\n                        (u[o] = [n, r]),\n                            l.postMessage({\n                                type: 'RPC',\n                                id: o,\n                                method: e,\n                                params: t\n                            });\n                    });\n                }),\n                (l.rpcMethods = {}),\n                e(l, l.rpcMethods, u),\n                (l.expose = function(e) {\n                    l[s] = function() {\n                        return l.call(e, [].slice.call(arguments));\n                    };\n                }),\n                o)) {\n                    s in l || l.expose(s);\n                }\n                return l;\n            }\n\n            /**\n             * It returns a canvas with the given width and height\n             * @param {Number} w - width\n             * @param {Number} h - height\n             * @returns {Object}\n             */\n            function getCanvas(w, h) {\n                var canvas = document.createElement('canvas');\n                canvas.width = w;\n                canvas.height = h;\n\n                return canvas;\n            }\n\n            /**\n             * Given a ImageData it returns the dataURL\n             * @param {ImageData} imageData\n             * @returns {String}\n             */\n            function convertImageDataToCanvasURL(imageData) {\n                var canvas = window.document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                canvas.width = imageData.width;\n                canvas.height = imageData.height;\n                ctx.putImageData(imageData, 0, 0);\n\n                return canvas.toDataURL();\n            }\n\n            /**\n             * Given a worker file with the transformation the work is split\n             * between the configured number of workers and the transformation is applied\n             * returning a Promise\n             * @param {Object} data - image data\n             * @param {Function} transform - transformation function\n             * @param {Object} options - object to be passed to the transform function\n             * @param {Number} nWorkers - number of workers to transform the image\n             * @returns {Promise}\n             */\n            function applyFilter(_ref) {\n                var data = _ref.data,\n                    transform = _ref.transform,\n                    options = _ref.options,\n                    nWorkers = _ref.nWorkers;\n\n                var worker = workerize(\n                    '\\n        var transform = ' +\n                        transform +\n                        ';\\n\\n        export function execute(canvas, index, length, options) {\\n            canvas.data = transform({ \\n                data: canvas.data, \\n                length: length, \\n                options: options\\n            });\\n\\n            return { result: canvas, index: index };\\n        }\\n    '\n                );\n\n                // Drawing the source image into the target canvas\n                var canvas = getCanvas(data.width, data.height);\n                var context = canvas.getContext('2d');\n                context.putImageData(data, 0, 0);\n\n                // Minimium 1 worker\n                nWorkers = nWorkers || 1;\n\n                // Height of the picture chunck for every worker\n                var blockSize = Math.floor(canvas.height / nWorkers);\n\n                return new Promise(function(resolve) {\n                    var finished = 0;\n                    var height = void 0;\n\n                    for (var index = 0; index < nWorkers; index++) {\n                        // In the last worker we have to make sure we process whatever is missing\n                        height = blockSize;\n\n                        if (index + 1 === nWorkers) {\n                            height = canvas.height - blockSize * index;\n                        }\n\n                        // Getting the picture\n                        var canvasData = context.getImageData(\n                            0,\n                            blockSize * index,\n                            canvas.width,\n                            height\n                        );\n                        var length = height * canvas.width * 4;\n\n                        worker\n                            .execute(canvasData, index, length, options)\n                            .then(function(response) {\n                                // Copying back canvas data to canvas\n                                // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                                // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                                context.putImageData(\n                                    response.result,\n                                    0,\n                                    blockSize * response.index\n                                );\n\n                                finished++;\n\n                                if (finished === nWorkers) {\n                                    resolve(\n                                        context.getImageData(\n                                            0,\n                                            0,\n                                            canvas.width,\n                                            canvas.height\n                                        )\n                                    );\n                                }\n                            });\n                    }\n                });\n            }\n\n            exports.getCanvas = getCanvas;\n            exports.convertImageDataToCanvasURL = convertImageDataToCanvasURL;\n            exports.applyFilter = applyFilter;\n        });\n    });\n    var lensCore_umd_1 = lensCore_umd.getCanvas;\n    var lensCore_umd_2 = lensCore_umd.convertImageDataToCanvasURL;\n    var lensCore_umd_3 = lensCore_umd.applyFilter;\n\n    /**\n     * Iterate over the array applying the brightness transformation\n     * @param {Object} data\n     * @param {Number} length\n     * @param {Object} options\n     * @param {Number} [options.adjustment]\n     */\n    var transform = function transform(_ref) {\n        var data = _ref.data,\n            length = _ref.length,\n            options = _ref.options;\n\n        for (var i = 0; i < length; i += 4) {\n            data[i] += options.adjustment;\n            data[i + 1] += options.adjustment;\n            data[i + 2] += options.adjustment;\n        }\n\n        return data;\n    };\n\n    /**\n     * @param {ImageData} data - data of a image extracted from a canvas\n     * @param {Object} options - options to pass to the transformation function\n     * @param {Number} [options.adjustment] - adjustment to apply in the transformation\n     * @param {Number} nWorkers - number of workers\n     * @returns {Promise}\n     */\n    function brightness() {\n        var _ref2 =\n                arguments.length > 0 && arguments[0] !== undefined\n                    ? arguments[0]\n                    : {},\n            data = _ref2.data,\n            options = _ref2.options,\n            nWorkers = _ref2.nWorkers;\n\n        if (!data || !options || !options.adjustment) {\n            throw new Error(\n                'lens-filter-brightness:: invalid options provided'\n            );\n        }\n\n        return lensCore_umd_3({\n            data: data,\n            transform: transform,\n            options: options,\n            nWorkers: nWorkers\n        });\n    }\n\n    exports.transform = transform;\n    exports.default = brightness;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n});\n//# sourceMappingURL=lens-filter-brightness.umd.js.map\n","(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? factory(exports)\n        : typeof define === 'function' && define.amd\n            ? define(['exports'], factory)\n            : factory((global.lensFilterColor = {}));\n})(this, function(exports) {\n    'use strict';\n\n    var commonjsGlobal =\n        typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : typeof self !== 'undefined'\n                    ? self\n                    : {};\n\n    function createCommonjsModule(fn, module) {\n        return (\n            (module = { exports: {} }),\n            fn(module, module.exports),\n            module.exports\n        );\n    }\n\n    var lensCore_umd = createCommonjsModule(function(module, exports) {\n        (function(global, factory) {\n            factory();\n        })(commonjsGlobal, function() {\n            function e(e, t, n) {\n                e.addEventListener('message', function(r) {\n                    var o = r.data,\n                        a = o.id;\n                    if ('RPC' === o.type && null != a)\n                        if (o.method) {\n                            var s = t[o.method];\n                            null == s\n                                ? e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      error: 'NO_SUCH_METHOD'\n                                  })\n                                : Promise.resolve()\n                                      .then(function() {\n                                          return s.apply(null, o.params);\n                                      })\n                                      .then(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              result: t\n                                          });\n                                      })\n                                      .catch(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              error: '' + t\n                                          });\n                                      });\n                        } else {\n                            var i = n[a];\n                            if (null == i) throw Error('Unknown callback ' + a);\n                            delete n[a],\n                                o.error ? i[1](Error(o.error)) : i[0](o.result);\n                        }\n                });\n            }\n            function workerize(t, n) {\n                var r = this,\n                    o = {},\n                    a =\n                        '__xpo' +\n                        Math.random()\n                            .toString()\n                            .substring(2) +\n                        '__';\n                'function' == typeof t &&\n                    (t =\n                        '(' +\n                        Function.prototype.toString.call(t) +\n                        ')(' +\n                        a +\n                        ')'),\n                    (t =\n                        (function(e, t, n) {\n                            return (\n                                (e = (e = e.replace(\n                                    /^(\\s*)export\\s+default\\s+/m,\n                                    function(e, r) {\n                                        return (\n                                            (n.default = !0),\n                                            '' + r + t + '.default='\n                                        );\n                                    }\n                                )).replace(\n                                    /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n                                    function(e, r, o, a, s) {\n                                        return (\n                                            (n[s] = !0),\n                                            '' +\n                                                r +\n                                                t +\n                                                '.' +\n                                                s +\n                                                '=' +\n                                                o +\n                                                a +\n                                                s\n                                        );\n                                    }\n                                )),\n                                'var ' + t + '={};\\n' + e + '\\n' + t + ';'\n                            );\n                        })(t, a, o) +\n                        '\\n(' +\n                        Function.prototype.toString.call(e) +\n                        ')(self,' +\n                        a +\n                        ',{})');\n                var s,\n                    i = URL.createObjectURL(new Blob([t])),\n                    l = new Worker(i, n),\n                    c = l.terminate,\n                    u = {},\n                    p = 0;\n                for (s in ((l.kill = function(e) {\n                    l.postMessage({ type: 'KILL', signal: e }),\n                        setTimeout(l.terminate);\n                }),\n                (l.terminate = function() {\n                    URL.revokeObjectURL(i), c.call(r);\n                }),\n                (l.call = function(e, t) {\n                    return new Promise(function(n, r) {\n                        var o = 'rpc' + ++p;\n                        (u[o] = [n, r]),\n                            l.postMessage({\n                                type: 'RPC',\n                                id: o,\n                                method: e,\n                                params: t\n                            });\n                    });\n                }),\n                (l.rpcMethods = {}),\n                e(l, l.rpcMethods, u),\n                (l.expose = function(e) {\n                    l[s] = function() {\n                        return l.call(e, [].slice.call(arguments));\n                    };\n                }),\n                o)) {\n                    s in l || l.expose(s);\n                }\n                return l;\n            }\n\n            /**\n             * It returns a canvas with the given width and height\n             * @param {Number} w - width\n             * @param {Number} h - height\n             * @returns {Object}\n             */\n            function getCanvas(w, h) {\n                var canvas = document.createElement('canvas');\n                canvas.width = w;\n                canvas.height = h;\n\n                return canvas;\n            }\n\n            /**\n             * Given a ImageData it returns the dataURL\n             * @param {ImageData} imageData\n             * @returns {String}\n             */\n            function convertImageDataToCanvasURL(imageData) {\n                var canvas = window.document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                canvas.width = imageData.width;\n                canvas.height = imageData.height;\n                ctx.putImageData(imageData, 0, 0);\n\n                return canvas.toDataURL();\n            }\n\n            /**\n             * Given a worker file with the transformation the work is split\n             * between the configured number of workers and the transformation is applied\n             * returning a Promise\n             * @param {Object} data - image data\n             * @param {Function} transform - transformation function\n             * @param {Object} options - object to be passed to the transform function\n             * @param {Number} nWorkers - number of workers to transform the image\n             * @returns {Promise}\n             */\n            function applyFilter(_ref) {\n                var data = _ref.data,\n                    transform = _ref.transform,\n                    options = _ref.options,\n                    nWorkers = _ref.nWorkers;\n\n                var worker = workerize(\n                    '\\n        var transform = ' +\n                        transform +\n                        ';\\n\\n        export function execute(canvas, index, length, options) {\\n            canvas.data = transform({ \\n                data: canvas.data, \\n                length: length, \\n                options: options\\n            });\\n\\n            return { result: canvas, index: index };\\n        }\\n    '\n                );\n\n                // Drawing the source image into the target canvas\n                var canvas = getCanvas(data.width, data.height);\n                var context = canvas.getContext('2d');\n                context.putImageData(data, 0, 0);\n\n                // Minimium 1 worker\n                nWorkers = nWorkers || 1;\n\n                // Height of the picture chunck for every worker\n                var blockSize = Math.floor(canvas.height / nWorkers);\n\n                return new Promise(function(resolve) {\n                    var finished = 0;\n                    var height = void 0;\n\n                    for (var index = 0; index < nWorkers; index++) {\n                        // In the last worker we have to make sure we process whatever is missing\n                        height = blockSize;\n\n                        if (index + 1 === nWorkers) {\n                            height = canvas.height - blockSize * index;\n                        }\n\n                        // Getting the picture\n                        var canvasData = context.getImageData(\n                            0,\n                            blockSize * index,\n                            canvas.width,\n                            height\n                        );\n                        var length = height * canvas.width * 4;\n\n                        worker\n                            .execute(canvasData, index, length, options)\n                            .then(function(response) {\n                                // Copying back canvas data to canvas\n                                // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                                // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                                context.putImageData(\n                                    response.result,\n                                    0,\n                                    blockSize * response.index\n                                );\n\n                                finished++;\n\n                                if (finished === nWorkers) {\n                                    resolve(\n                                        context.getImageData(\n                                            0,\n                                            0,\n                                            canvas.width,\n                                            canvas.height\n                                        )\n                                    );\n                                }\n                            });\n                    }\n                });\n            }\n\n            exports.getCanvas = getCanvas;\n            exports.convertImageDataToCanvasURL = convertImageDataToCanvasURL;\n            exports.applyFilter = applyFilter;\n        });\n    });\n    var lensCore_umd_1 = lensCore_umd.getCanvas;\n    var lensCore_umd_2 = lensCore_umd.convertImageDataToCanvasURL;\n    var lensCore_umd_3 = lensCore_umd.applyFilter;\n\n    /**\n     * Iterate over the array applying the color transformation\n     * @param {Object} data\n     * @param {Number} length\n     * @param {Object} options\n     * @param {Array<ColorInterval>} [options.colorsInterval]\n     */\n    var transform = function transform(_ref) {\n        var data = _ref.data,\n            length = _ref.length,\n            options = _ref.options;\n\n        /**\n         * Validates if param is numeric\n         * @param   {Number}  n\n         * @returns {Boolean}\n         */\n        var isNumeric = function isNumeric(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        };\n\n        /**\n         * @param {Array} pixles\n         * @param {Number} index\n         * @param {Color} color\n         */\n        var applyPixelTransformation = function applyPixelTransformation(\n            pixels,\n            index,\n            color\n        ) {\n            pixels[index] = !isNumeric(color.r) ? pixels[index] : color.r;\n            pixels[index + 1] = !isNumeric(color.g)\n                ? pixels[index + 1]\n                : color.g;\n            pixels[index + 2] = !isNumeric(color.b)\n                ? pixels[index + 2]\n                : color.b;\n            pixels[index + 3] = !isNumeric(color.a)\n                ? pixels[index + 3]\n                : color.a;\n        };\n\n        /**\n         * @param {Array} data\n         * @param {Number} index\n         * @param {ColorInterval} colorInterval\n         */\n        var evaluatePixel = function evaluatePixel(data, index, colorInterval) {\n            var red = data[index];\n            var green = data[index + 1];\n            var blue = data[index + 2];\n\n            return (\n                red >= colorInterval.from.r &&\n                red <= colorInterval.to.r &&\n                green >= colorInterval.from.g &&\n                green <= colorInterval.to.g &&\n                blue >= colorInterval.from.b &&\n                blue <= colorInterval.to.b\n            );\n        };\n\n        var _loop = function _loop(i) {\n            options.colorsInterval.forEach(function(colorInterval) {\n                var isMatch = evaluatePixel(data, i, colorInterval);\n\n                if (isMatch && colorInterval.match) {\n                    applyPixelTransformation(data, i, colorInterval.match);\n                } else if (!isMatch && colorInterval.noMatch) {\n                    applyPixelTransformation(data, i, colorInterval.noMatch);\n                }\n            });\n        };\n\n        for (var i = 0; i < length; i += 4) {\n            _loop(i);\n        }\n\n        return data;\n    };\n\n    /**\n     * @param {ImageData} data - data of a image extracted from a canvas\n     * @param {Object} options - options to pass to the transformation function\n     * @param {ColorInterval} [options.colorsInterval] - adjustment to apply in the transformation\n     * @param {Number} nWorkers - number of workers\n     * @returns {Promise}\n     */\n    function color() {\n        var _ref2 =\n                arguments.length > 0 && arguments[0] !== undefined\n                    ? arguments[0]\n                    : {},\n            data = _ref2.data,\n            options = _ref2.options,\n            nWorkers = _ref2.nWorkers;\n\n        if (\n            !data ||\n            !options ||\n            !options.colorsInterval ||\n            !Array.isArray(options.colorsInterval)\n        ) {\n            throw new Error('lens-filter-color:: invalid options provided');\n        }\n\n        return lensCore_umd_3({\n            data: data,\n            transform: transform,\n            options: options,\n            nWorkers: nWorkers\n        });\n    }\n\n    exports.transform = transform;\n    exports.default = color;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n});\n//# sourceMappingURL=lens-filter-color.umd.js.map\n","(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? factory(exports)\n        : typeof define === 'function' && define.amd\n            ? define(['exports'], factory)\n            : factory((global.lensFilterColorize = {}));\n})(this, function(exports) {\n    'use strict';\n\n    var commonjsGlobal =\n        typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : typeof self !== 'undefined'\n                    ? self\n                    : {};\n\n    function createCommonjsModule(fn, module) {\n        return (\n            (module = { exports: {} }),\n            fn(module, module.exports),\n            module.exports\n        );\n    }\n\n    var lensCore_umd = createCommonjsModule(function(module, exports) {\n        (function(global, factory) {\n            factory();\n        })(commonjsGlobal, function() {\n            function e(e, t, n) {\n                e.addEventListener('message', function(r) {\n                    var o = r.data,\n                        a = o.id;\n                    if ('RPC' === o.type && null != a)\n                        if (o.method) {\n                            var s = t[o.method];\n                            null == s\n                                ? e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      error: 'NO_SUCH_METHOD'\n                                  })\n                                : Promise.resolve()\n                                      .then(function() {\n                                          return s.apply(null, o.params);\n                                      })\n                                      .then(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              result: t\n                                          });\n                                      })\n                                      .catch(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              error: '' + t\n                                          });\n                                      });\n                        } else {\n                            var i = n[a];\n                            if (null == i) throw Error('Unknown callback ' + a);\n                            delete n[a],\n                                o.error ? i[1](Error(o.error)) : i[0](o.result);\n                        }\n                });\n            }\n            function workerize(t, n) {\n                var r = this,\n                    o = {},\n                    a =\n                        '__xpo' +\n                        Math.random()\n                            .toString()\n                            .substring(2) +\n                        '__';\n                'function' == typeof t &&\n                    (t =\n                        '(' +\n                        Function.prototype.toString.call(t) +\n                        ')(' +\n                        a +\n                        ')'),\n                    (t =\n                        (function(e, t, n) {\n                            return (\n                                (e = (e = e.replace(\n                                    /^(\\s*)export\\s+default\\s+/m,\n                                    function(e, r) {\n                                        return (\n                                            (n.default = !0),\n                                            '' + r + t + '.default='\n                                        );\n                                    }\n                                )).replace(\n                                    /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n                                    function(e, r, o, a, s) {\n                                        return (\n                                            (n[s] = !0),\n                                            '' +\n                                                r +\n                                                t +\n                                                '.' +\n                                                s +\n                                                '=' +\n                                                o +\n                                                a +\n                                                s\n                                        );\n                                    }\n                                )),\n                                'var ' + t + '={};\\n' + e + '\\n' + t + ';'\n                            );\n                        })(t, a, o) +\n                        '\\n(' +\n                        Function.prototype.toString.call(e) +\n                        ')(self,' +\n                        a +\n                        ',{})');\n                var s,\n                    i = URL.createObjectURL(new Blob([t])),\n                    l = new Worker(i, n),\n                    c = l.terminate,\n                    u = {},\n                    p = 0;\n                for (s in ((l.kill = function(e) {\n                    l.postMessage({ type: 'KILL', signal: e }),\n                        setTimeout(l.terminate);\n                }),\n                (l.terminate = function() {\n                    URL.revokeObjectURL(i), c.call(r);\n                }),\n                (l.call = function(e, t) {\n                    return new Promise(function(n, r) {\n                        var o = 'rpc' + ++p;\n                        (u[o] = [n, r]),\n                            l.postMessage({\n                                type: 'RPC',\n                                id: o,\n                                method: e,\n                                params: t\n                            });\n                    });\n                }),\n                (l.rpcMethods = {}),\n                e(l, l.rpcMethods, u),\n                (l.expose = function(e) {\n                    l[s] = function() {\n                        return l.call(e, [].slice.call(arguments));\n                    };\n                }),\n                o)) {\n                    s in l || l.expose(s);\n                }\n                return l;\n            }\n\n            /**\n             * It returns a canvas with the given width and height\n             * @param {Number} w - width\n             * @param {Number} h - height\n             * @returns {Object}\n             */\n            function getCanvas(w, h) {\n                var canvas = document.createElement('canvas');\n                canvas.width = w;\n                canvas.height = h;\n\n                return canvas;\n            }\n\n            /**\n             * Given a ImageData it returns the dataURL\n             * @param {ImageData} imageData\n             * @returns {String}\n             */\n            function convertImageDataToCanvasURL(imageData) {\n                var canvas = window.document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                canvas.width = imageData.width;\n                canvas.height = imageData.height;\n                ctx.putImageData(imageData, 0, 0);\n\n                return canvas.toDataURL();\n            }\n\n            /**\n             * Given a worker file with the transformation the work is split\n             * between the configured number of workers and the transformation is applied\n             * returning a Promise\n             * @param {Object} data - image data\n             * @param {Function} transform - transformation function\n             * @param {Object} options - object to be passed to the transform function\n             * @param {Number} nWorkers - number of workers to transform the image\n             * @returns {Promise}\n             */\n            function applyFilter(_ref) {\n                var data = _ref.data,\n                    transform = _ref.transform,\n                    options = _ref.options,\n                    nWorkers = _ref.nWorkers;\n\n                var worker = workerize(\n                    '\\n        var transform = ' +\n                        transform +\n                        ';\\n\\n        export function execute(canvas, index, length, options) {\\n            canvas.data = transform({ \\n                data: canvas.data, \\n                length: length, \\n                options: options\\n            });\\n\\n            return { result: canvas, index: index };\\n        }\\n    '\n                );\n\n                // Drawing the source image into the target canvas\n                var canvas = getCanvas(data.width, data.height);\n                var context = canvas.getContext('2d');\n                context.putImageData(data, 0, 0);\n\n                // Minimium 1 worker\n                nWorkers = nWorkers || 1;\n\n                // Height of the picture chunck for every worker\n                var blockSize = Math.floor(canvas.height / nWorkers);\n\n                return new Promise(function(resolve) {\n                    var finished = 0;\n                    var height = void 0;\n\n                    for (var index = 0; index < nWorkers; index++) {\n                        // In the last worker we have to make sure we process whatever is missing\n                        height = blockSize;\n\n                        if (index + 1 === nWorkers) {\n                            height = canvas.height - blockSize * index;\n                        }\n\n                        // Getting the picture\n                        var canvasData = context.getImageData(\n                            0,\n                            blockSize * index,\n                            canvas.width,\n                            height\n                        );\n                        var length = height * canvas.width * 4;\n\n                        worker\n                            .execute(canvasData, index, length, options)\n                            .then(function(response) {\n                                // Copying back canvas data to canvas\n                                // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                                // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                                context.putImageData(\n                                    response.result,\n                                    0,\n                                    blockSize * response.index\n                                );\n\n                                finished++;\n\n                                if (finished === nWorkers) {\n                                    resolve(\n                                        context.getImageData(\n                                            0,\n                                            0,\n                                            canvas.width,\n                                            canvas.height\n                                        )\n                                    );\n                                }\n                            });\n                    }\n                });\n            }\n\n            exports.getCanvas = getCanvas;\n            exports.convertImageDataToCanvasURL = convertImageDataToCanvasURL;\n            exports.applyFilter = applyFilter;\n        });\n    });\n    var lensCore_umd_1 = lensCore_umd.getCanvas;\n    var lensCore_umd_2 = lensCore_umd.convertImageDataToCanvasURL;\n    var lensCore_umd_3 = lensCore_umd.applyFilter;\n\n    /**\n     * @param {Object} data\n     * @param {Number} length\n     * @param {Object} options\n     * @param {Number} [options.color]\n     * @param {Number} [options.level]\n     */\n    var transform = function transform(_ref) {\n        var data = _ref.data,\n            length = _ref.length,\n            options = _ref.options;\n\n        var hex =\n            options.color.charAt(0) === '#'\n                ? options.color.substr(1)\n                : options.color;\n        var colorRGB = {\n            r: parseInt(hex.substr(0, 2), 16),\n            g: parseInt(hex.substr(2, 2), 16),\n            b: parseInt(hex.substr(4, 2), 16)\n        };\n\n        for (var i = 0; i < length; i += 4) {\n            data[i] -= (data[i] - colorRGB.r) * (options.level / 100);\n            data[i + 1] -= (data[i + 1] - colorRGB.g) * (options.level / 100);\n            data[i + 2] -= (data[i + 2] - colorRGB.b) * (options.level / 100);\n        }\n\n        return data;\n    };\n\n    /**\n     * @param {ImageData} data - data of a image extracted from a canvas\n     * @param {Object} options - options to pass to the transformation function\n     * @param {Number} [options.color] - color value to apply in the transformation\n     * @param {Number} [options.level] - level value to apply in the transformation\n     * @param {Number} nWorkers - number of workers\n     * @returns {Promise}\n     */\n    function colorize() {\n        var _ref2 =\n                arguments.length > 0 && arguments[0] !== undefined\n                    ? arguments[0]\n                    : {},\n            data = _ref2.data,\n            options = _ref2.options,\n            nWorkers = _ref2.nWorkers;\n\n        if (!data || !options || !options.color || !options.level) {\n            throw new Error('lens-filter-colorize:: invalid options provided');\n        }\n\n        return lensCore_umd_3({\n            data: data,\n            transform: transform,\n            options: options,\n            nWorkers: nWorkers\n        });\n    }\n\n    exports.transform = transform;\n    exports.default = colorize;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n});\n//# sourceMappingURL=lens-filter-color.umd.js.map\n","(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? factory(exports)\n        : typeof define === 'function' && define.amd\n            ? define(['exports'], factory)\n            : factory((global.lensFilterContrast = {}));\n})(this, function(exports) {\n    'use strict';\n\n    var commonjsGlobal =\n        typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : typeof self !== 'undefined'\n                    ? self\n                    : {};\n\n    function createCommonjsModule(fn, module) {\n        return (\n            (module = { exports: {} }),\n            fn(module, module.exports),\n            module.exports\n        );\n    }\n\n    var lensCore_umd = createCommonjsModule(function(module, exports) {\n        (function(global, factory) {\n            factory();\n        })(commonjsGlobal, function() {\n            function e(e, t, n) {\n                e.addEventListener('message', function(r) {\n                    var o = r.data,\n                        a = o.id;\n                    if ('RPC' === o.type && null != a)\n                        if (o.method) {\n                            var s = t[o.method];\n                            null == s\n                                ? e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      error: 'NO_SUCH_METHOD'\n                                  })\n                                : Promise.resolve()\n                                      .then(function() {\n                                          return s.apply(null, o.params);\n                                      })\n                                      .then(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              result: t\n                                          });\n                                      })\n                                      .catch(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              error: '' + t\n                                          });\n                                      });\n                        } else {\n                            var i = n[a];\n                            if (null == i) throw Error('Unknown callback ' + a);\n                            delete n[a],\n                                o.error ? i[1](Error(o.error)) : i[0](o.result);\n                        }\n                });\n            }\n            function workerize(t, n) {\n                var r = this,\n                    o = {},\n                    a =\n                        '__xpo' +\n                        Math.random()\n                            .toString()\n                            .substring(2) +\n                        '__';\n                'function' == typeof t &&\n                    (t =\n                        '(' +\n                        Function.prototype.toString.call(t) +\n                        ')(' +\n                        a +\n                        ')'),\n                    (t =\n                        (function(e, t, n) {\n                            return (\n                                (e = (e = e.replace(\n                                    /^(\\s*)export\\s+default\\s+/m,\n                                    function(e, r) {\n                                        return (\n                                            (n.default = !0),\n                                            '' + r + t + '.default='\n                                        );\n                                    }\n                                )).replace(\n                                    /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n                                    function(e, r, o, a, s) {\n                                        return (\n                                            (n[s] = !0),\n                                            '' +\n                                                r +\n                                                t +\n                                                '.' +\n                                                s +\n                                                '=' +\n                                                o +\n                                                a +\n                                                s\n                                        );\n                                    }\n                                )),\n                                'var ' + t + '={};\\n' + e + '\\n' + t + ';'\n                            );\n                        })(t, a, o) +\n                        '\\n(' +\n                        Function.prototype.toString.call(e) +\n                        ')(self,' +\n                        a +\n                        ',{})');\n                var s,\n                    i = URL.createObjectURL(new Blob([t])),\n                    l = new Worker(i, n),\n                    c = l.terminate,\n                    u = {},\n                    p = 0;\n                for (s in ((l.kill = function(e) {\n                    l.postMessage({ type: 'KILL', signal: e }),\n                        setTimeout(l.terminate);\n                }),\n                (l.terminate = function() {\n                    URL.revokeObjectURL(i), c.call(r);\n                }),\n                (l.call = function(e, t) {\n                    return new Promise(function(n, r) {\n                        var o = 'rpc' + ++p;\n                        (u[o] = [n, r]),\n                            l.postMessage({\n                                type: 'RPC',\n                                id: o,\n                                method: e,\n                                params: t\n                            });\n                    });\n                }),\n                (l.rpcMethods = {}),\n                e(l, l.rpcMethods, u),\n                (l.expose = function(e) {\n                    l[s] = function() {\n                        return l.call(e, [].slice.call(arguments));\n                    };\n                }),\n                o)) {\n                    s in l || l.expose(s);\n                }\n                return l;\n            }\n\n            /**\n             * It returns a canvas with the given width and height\n             * @param {Number} w - width\n             * @param {Number} h - height\n             * @returns {Object}\n             */\n            function getCanvas(w, h) {\n                var canvas = document.createElement('canvas');\n                canvas.width = w;\n                canvas.height = h;\n\n                return canvas;\n            }\n\n            /**\n             * Given a ImageData it returns the dataURL\n             * @param {ImageData} imageData\n             * @returns {String}\n             */\n            function convertImageDataToCanvasURL(imageData) {\n                var canvas = window.document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                canvas.width = imageData.width;\n                canvas.height = imageData.height;\n                ctx.putImageData(imageData, 0, 0);\n\n                return canvas.toDataURL();\n            }\n\n            /**\n             * Given a worker file with the transformation the work is split\n             * between the configured number of workers and the transformation is applied\n             * returning a Promise\n             * @param {Object} data - image data\n             * @param {Function} transform - transformation function\n             * @param {Object} options - object to be passed to the transform function\n             * @param {Number} nWorkers - number of workers to transform the image\n             * @returns {Promise}\n             */\n            function applyFilter(_ref) {\n                var data = _ref.data,\n                    transform = _ref.transform,\n                    options = _ref.options,\n                    nWorkers = _ref.nWorkers;\n\n                var worker = workerize(\n                    '\\n        var transform = ' +\n                        transform +\n                        ';\\n\\n        export function execute(canvas, index, length, options) {\\n            canvas.data = transform({ \\n                data: canvas.data, \\n                length: length, \\n                options: options\\n            });\\n\\n            return { result: canvas, index: index };\\n        }\\n    '\n                );\n\n                // Drawing the source image into the target canvas\n                var canvas = getCanvas(data.width, data.height);\n                var context = canvas.getContext('2d');\n                context.putImageData(data, 0, 0);\n\n                // Minimium 1 worker\n                nWorkers = nWorkers || 1;\n\n                // Height of the picture chunck for every worker\n                var blockSize = Math.floor(canvas.height / nWorkers);\n\n                return new Promise(function(resolve) {\n                    var finished = 0;\n                    var height = void 0;\n\n                    for (var index = 0; index < nWorkers; index++) {\n                        // In the last worker we have to make sure we process whatever is missing\n                        height = blockSize;\n\n                        if (index + 1 === nWorkers) {\n                            height = canvas.height - blockSize * index;\n                        }\n\n                        // Getting the picture\n                        var canvasData = context.getImageData(\n                            0,\n                            blockSize * index,\n                            canvas.width,\n                            height\n                        );\n                        var length = height * canvas.width * 4;\n\n                        worker\n                            .execute(canvasData, index, length, options)\n                            .then(function(response) {\n                                // Copying back canvas data to canvas\n                                // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                                // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                                context.putImageData(\n                                    response.result,\n                                    0,\n                                    blockSize * response.index\n                                );\n\n                                finished++;\n\n                                if (finished === nWorkers) {\n                                    resolve(\n                                        context.getImageData(\n                                            0,\n                                            0,\n                                            canvas.width,\n                                            canvas.height\n                                        )\n                                    );\n                                }\n                            });\n                    }\n                });\n            }\n\n            exports.getCanvas = getCanvas;\n            exports.convertImageDataToCanvasURL = convertImageDataToCanvasURL;\n            exports.applyFilter = applyFilter;\n        });\n    });\n    var lensCore_umd_1 = lensCore_umd.getCanvas;\n    var lensCore_umd_2 = lensCore_umd.convertImageDataToCanvasURL;\n    var lensCore_umd_3 = lensCore_umd.applyFilter;\n\n    /**\n     * Iterate over the array applying the contrast transformation\n     * @name transform\n     * @param {Object} data\n     * @param {Number} length\n     * @param {Object} options\n     * @param {Number} [options.contrast]\n     */\n    var transform = function transform(_ref) {\n        var data = _ref.data,\n            length = _ref.length,\n            options = _ref.options;\n\n        var factor =\n            (259 * (options.contrast + 255)) / (255 * (259 - options.contrast));\n\n        for (var i = 0; i < length; i += 4) {\n            data[i] = factor * (data[i] - 128) + 128;\n            data[i + 1] = factor * (data[i + 1] - 128) + 128;\n            data[i + 2] = factor * (data[i + 2] - 128) + 128;\n        }\n\n        return data;\n    };\n\n    /**\n     * @param {ImageData} data - data of a image extracted from a canvas\n     * @param {Object} options - options to pass to the transformation function\n     * @param {Number} [options.contrast] - contrast value to apply in the transformation\n     * @param {Number} nWorkers - number of workers\n     * @returns {Promise}\n     */\n    function contrast() {\n        var _ref2 =\n                arguments.length > 0 && arguments[0] !== undefined\n                    ? arguments[0]\n                    : {},\n            data = _ref2.data,\n            options = _ref2.options,\n            nWorkers = _ref2.nWorkers;\n\n        if (!data || !options || !options.contrast) {\n            throw new Error('lens-filter-contrast:: invalid options provided');\n        }\n\n        return lensCore_umd_3({\n            data: data,\n            transform: transform,\n            options: options,\n            nWorkers: nWorkers\n        });\n    }\n\n    exports.transform = transform;\n    exports.default = contrast;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n});\n//# sourceMappingURL=lens-filter-contrast.umd.js.map\n","(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? factory(exports)\n        : typeof define === 'function' && define.amd\n            ? define(['exports'], factory)\n            : factory((global.lensFilterGamma = {}));\n})(this, function(exports) {\n    'use strict';\n\n    var commonjsGlobal =\n        typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : typeof self !== 'undefined'\n                    ? self\n                    : {};\n\n    function createCommonjsModule(fn, module) {\n        return (\n            (module = { exports: {} }),\n            fn(module, module.exports),\n            module.exports\n        );\n    }\n\n    var lensCore_umd = createCommonjsModule(function(module, exports) {\n        (function(global, factory) {\n            factory();\n        })(commonjsGlobal, function() {\n            function e(e, t, n) {\n                e.addEventListener('message', function(r) {\n                    var o = r.data,\n                        a = o.id;\n                    if ('RPC' === o.type && null != a)\n                        if (o.method) {\n                            var s = t[o.method];\n                            null == s\n                                ? e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      error: 'NO_SUCH_METHOD'\n                                  })\n                                : Promise.resolve()\n                                      .then(function() {\n                                          return s.apply(null, o.params);\n                                      })\n                                      .then(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              result: t\n                                          });\n                                      })\n                                      .catch(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              error: '' + t\n                                          });\n                                      });\n                        } else {\n                            var i = n[a];\n                            if (null == i) throw Error('Unknown callback ' + a);\n                            delete n[a],\n                                o.error ? i[1](Error(o.error)) : i[0](o.result);\n                        }\n                });\n            }\n            function workerize(t, n) {\n                var r = this,\n                    o = {},\n                    a =\n                        '__xpo' +\n                        Math.random()\n                            .toString()\n                            .substring(2) +\n                        '__';\n                'function' == typeof t &&\n                    (t =\n                        '(' +\n                        Function.prototype.toString.call(t) +\n                        ')(' +\n                        a +\n                        ')'),\n                    (t =\n                        (function(e, t, n) {\n                            return (\n                                (e = (e = e.replace(\n                                    /^(\\s*)export\\s+default\\s+/m,\n                                    function(e, r) {\n                                        return (\n                                            (n.default = !0),\n                                            '' + r + t + '.default='\n                                        );\n                                    }\n                                )).replace(\n                                    /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n                                    function(e, r, o, a, s) {\n                                        return (\n                                            (n[s] = !0),\n                                            '' +\n                                                r +\n                                                t +\n                                                '.' +\n                                                s +\n                                                '=' +\n                                                o +\n                                                a +\n                                                s\n                                        );\n                                    }\n                                )),\n                                'var ' + t + '={};\\n' + e + '\\n' + t + ';'\n                            );\n                        })(t, a, o) +\n                        '\\n(' +\n                        Function.prototype.toString.call(e) +\n                        ')(self,' +\n                        a +\n                        ',{})');\n                var s,\n                    i = URL.createObjectURL(new Blob([t])),\n                    l = new Worker(i, n),\n                    c = l.terminate,\n                    u = {},\n                    p = 0;\n                for (s in ((l.kill = function(e) {\n                    l.postMessage({ type: 'KILL', signal: e }),\n                        setTimeout(l.terminate);\n                }),\n                (l.terminate = function() {\n                    URL.revokeObjectURL(i), c.call(r);\n                }),\n                (l.call = function(e, t) {\n                    return new Promise(function(n, r) {\n                        var o = 'rpc' + ++p;\n                        (u[o] = [n, r]),\n                            l.postMessage({\n                                type: 'RPC',\n                                id: o,\n                                method: e,\n                                params: t\n                            });\n                    });\n                }),\n                (l.rpcMethods = {}),\n                e(l, l.rpcMethods, u),\n                (l.expose = function(e) {\n                    l[s] = function() {\n                        return l.call(e, [].slice.call(arguments));\n                    };\n                }),\n                o)) {\n                    s in l || l.expose(s);\n                }\n                return l;\n            }\n\n            /**\n             * It returns a canvas with the given width and height\n             * @param {Number} w - width\n             * @param {Number} h - height\n             * @returns {Object}\n             */\n            function getCanvas(w, h) {\n                var canvas = document.createElement('canvas');\n                canvas.width = w;\n                canvas.height = h;\n\n                return canvas;\n            }\n\n            /**\n             * Given a ImageData it returns the dataURL\n             * @param {ImageData} imageData\n             * @returns {String}\n             */\n            function convertImageDataToCanvasURL(imageData) {\n                var canvas = window.document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                canvas.width = imageData.width;\n                canvas.height = imageData.height;\n                ctx.putImageData(imageData, 0, 0);\n\n                return canvas.toDataURL();\n            }\n\n            /**\n             * Given a worker file with the transformation the work is split\n             * between the configured number of workers and the transformation is applied\n             * returning a Promise\n             * @param {Object} data - image data\n             * @param {Function} transform - transformation function\n             * @param {Object} options - object to be passed to the transform function\n             * @param {Number} nWorkers - number of workers to transform the image\n             * @returns {Promise}\n             */\n            function applyFilter(_ref) {\n                var data = _ref.data,\n                    transform = _ref.transform,\n                    options = _ref.options,\n                    nWorkers = _ref.nWorkers;\n\n                var worker = workerize(\n                    '\\n        var transform = ' +\n                        transform +\n                        ';\\n\\n        export function execute(canvas, index, length, options) {\\n            canvas.data = transform({ \\n                data: canvas.data, \\n                length: length, \\n                options: options\\n            });\\n\\n            return { result: canvas, index: index };\\n        }\\n    '\n                );\n\n                // Drawing the source image into the target canvas\n                var canvas = getCanvas(data.width, data.height);\n                var context = canvas.getContext('2d');\n                context.putImageData(data, 0, 0);\n\n                // Minimium 1 worker\n                nWorkers = nWorkers || 1;\n\n                // Height of the picture chunck for every worker\n                var blockSize = Math.floor(canvas.height / nWorkers);\n\n                return new Promise(function(resolve) {\n                    var finished = 0;\n                    var height = void 0;\n\n                    for (var index = 0; index < nWorkers; index++) {\n                        // In the last worker we have to make sure we process whatever is missing\n                        height = blockSize;\n\n                        if (index + 1 === nWorkers) {\n                            height = canvas.height - blockSize * index;\n                        }\n\n                        // Getting the picture\n                        var canvasData = context.getImageData(\n                            0,\n                            blockSize * index,\n                            canvas.width,\n                            height\n                        );\n                        var length = height * canvas.width * 4;\n\n                        worker\n                            .execute(canvasData, index, length, options)\n                            .then(function(response) {\n                                // Copying back canvas data to canvas\n                                // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                                // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                                context.putImageData(\n                                    response.result,\n                                    0,\n                                    blockSize * response.index\n                                );\n\n                                finished++;\n\n                                if (finished === nWorkers) {\n                                    resolve(\n                                        context.getImageData(\n                                            0,\n                                            0,\n                                            canvas.width,\n                                            canvas.height\n                                        )\n                                    );\n                                }\n                            });\n                    }\n                });\n            }\n\n            exports.getCanvas = getCanvas;\n            exports.convertImageDataToCanvasURL = convertImageDataToCanvasURL;\n            exports.applyFilter = applyFilter;\n        });\n    });\n    var lensCore_umd_1 = lensCore_umd.getCanvas;\n    var lensCore_umd_2 = lensCore_umd.convertImageDataToCanvasURL;\n    var lensCore_umd_3 = lensCore_umd.applyFilter;\n\n    /**\n     * Iterate over the array applying the gamma transformation\n     * @param {Object} data\n     * @param {Number} length\n     * @param {Object} options\n     * @param {Number} [options.adjustment]\n     */\n    var transform = function transform(_ref) {\n        var data = _ref.data,\n            length = _ref.length,\n            options = _ref.options;\n\n        for (var i = 0; i < length; i += 4) {\n            data[i] = Math.pow(data[i] / 255, options.adjustment) * 255;\n            data[i + 1] = Math.pow(data[i + 1] / 255, options.adjustment) * 255;\n            data[i + 2] = Math.pow(data[i + 2] / 255, options.adjustment) * 255;\n        }\n\n        return data;\n    };\n\n    /**\n     * @param {ImageData} data - data of a image extracted from a canvas\n     * @param {Object} options - options to pass to the transformation function\n     * @param {Number} [options.adjustment] - adjustment to apply in the transformation\n     * @param {Number} nWorkers - number of workers\n     * @returns {Promise}\n     */\n    function gamma() {\n        var _ref2 =\n                arguments.length > 0 && arguments[0] !== undefined\n                    ? arguments[0]\n                    : {},\n            data = _ref2.data,\n            options = _ref2.options,\n            nWorkers = _ref2.nWorkers;\n\n        if (!data || !options || !options.adjustment) {\n            throw new Error('lens-filter-gamma:: invalid options provided');\n        }\n\n        return lensCore_umd_3({\n            data: data,\n            transform: transform,\n            options: options,\n            nWorkers: nWorkers\n        });\n    }\n\n    exports.transform = transform;\n    exports.default = gamma;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n});\n//# sourceMappingURL=lens-filter-gamma.umd.js.map\n","(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? factory(exports)\n        : typeof define === 'function' && define.amd\n            ? define(['exports'], factory)\n            : factory((global.lensFilterGrayscale = {}));\n})(this, function(exports) {\n    'use strict';\n\n    var commonjsGlobal =\n        typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : typeof self !== 'undefined'\n                    ? self\n                    : {};\n\n    function createCommonjsModule(fn, module) {\n        return (\n            (module = { exports: {} }),\n            fn(module, module.exports),\n            module.exports\n        );\n    }\n\n    var lensCore_umd = createCommonjsModule(function(module, exports) {\n        (function(global, factory) {\n            factory();\n        })(commonjsGlobal, function() {\n            function e(e, t, n) {\n                e.addEventListener('message', function(r) {\n                    var o = r.data,\n                        a = o.id;\n                    if ('RPC' === o.type && null != a)\n                        if (o.method) {\n                            var s = t[o.method];\n                            null == s\n                                ? e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      error: 'NO_SUCH_METHOD'\n                                  })\n                                : Promise.resolve()\n                                      .then(function() {\n                                          return s.apply(null, o.params);\n                                      })\n                                      .then(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              result: t\n                                          });\n                                      })\n                                      .catch(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              error: '' + t\n                                          });\n                                      });\n                        } else {\n                            var i = n[a];\n                            if (null == i) throw Error('Unknown callback ' + a);\n                            delete n[a],\n                                o.error ? i[1](Error(o.error)) : i[0](o.result);\n                        }\n                });\n            }\n            function workerize(t, n) {\n                var r = this,\n                    o = {},\n                    a =\n                        '__xpo' +\n                        Math.random()\n                            .toString()\n                            .substring(2) +\n                        '__';\n                'function' == typeof t &&\n                    (t =\n                        '(' +\n                        Function.prototype.toString.call(t) +\n                        ')(' +\n                        a +\n                        ')'),\n                    (t =\n                        (function(e, t, n) {\n                            return (\n                                (e = (e = e.replace(\n                                    /^(\\s*)export\\s+default\\s+/m,\n                                    function(e, r) {\n                                        return (\n                                            (n.default = !0),\n                                            '' + r + t + '.default='\n                                        );\n                                    }\n                                )).replace(\n                                    /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n                                    function(e, r, o, a, s) {\n                                        return (\n                                            (n[s] = !0),\n                                            '' +\n                                                r +\n                                                t +\n                                                '.' +\n                                                s +\n                                                '=' +\n                                                o +\n                                                a +\n                                                s\n                                        );\n                                    }\n                                )),\n                                'var ' + t + '={};\\n' + e + '\\n' + t + ';'\n                            );\n                        })(t, a, o) +\n                        '\\n(' +\n                        Function.prototype.toString.call(e) +\n                        ')(self,' +\n                        a +\n                        ',{})');\n                var s,\n                    i = URL.createObjectURL(new Blob([t])),\n                    l = new Worker(i, n),\n                    c = l.terminate,\n                    u = {},\n                    p = 0;\n                for (s in ((l.kill = function(e) {\n                    l.postMessage({ type: 'KILL', signal: e }),\n                        setTimeout(l.terminate);\n                }),\n                (l.terminate = function() {\n                    URL.revokeObjectURL(i), c.call(r);\n                }),\n                (l.call = function(e, t) {\n                    return new Promise(function(n, r) {\n                        var o = 'rpc' + ++p;\n                        (u[o] = [n, r]),\n                            l.postMessage({\n                                type: 'RPC',\n                                id: o,\n                                method: e,\n                                params: t\n                            });\n                    });\n                }),\n                (l.rpcMethods = {}),\n                e(l, l.rpcMethods, u),\n                (l.expose = function(e) {\n                    l[s] = function() {\n                        return l.call(e, [].slice.call(arguments));\n                    };\n                }),\n                o)) {\n                    s in l || l.expose(s);\n                }\n                return l;\n            }\n\n            /**\n             * It returns a canvas with the given width and height\n             * @param {Number} w - width\n             * @param {Number} h - height\n             * @returns {Object}\n             */\n            function getCanvas(w, h) {\n                var canvas = document.createElement('canvas');\n                canvas.width = w;\n                canvas.height = h;\n\n                return canvas;\n            }\n\n            /**\n             * Given a ImageData it returns the dataURL\n             * @param {ImageData} imageData\n             * @returns {String}\n             */\n            function convertImageDataToCanvasURL(imageData) {\n                var canvas = window.document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                canvas.width = imageData.width;\n                canvas.height = imageData.height;\n                ctx.putImageData(imageData, 0, 0);\n\n                return canvas.toDataURL();\n            }\n\n            /**\n             * Given a worker file with the transformation the work is split\n             * between the configured number of workers and the transformation is applied\n             * returning a Promise\n             * @param {Object} data - image data\n             * @param {Function} transform - transformation function\n             * @param {Object} options - object to be passed to the transform function\n             * @param {Number} nWorkers - number of workers to transform the image\n             * @returns {Promise}\n             */\n            function applyFilter(_ref) {\n                var data = _ref.data,\n                    transform = _ref.transform,\n                    options = _ref.options,\n                    nWorkers = _ref.nWorkers;\n\n                var worker = workerize(\n                    '\\n        var transform = ' +\n                        transform +\n                        ';\\n\\n        export function execute(canvas, index, length, options) {\\n            canvas.data = transform({ \\n                data: canvas.data, \\n                length: length, \\n                options: options\\n            });\\n\\n            return { result: canvas, index: index };\\n        }\\n    '\n                );\n\n                // Drawing the source image into the target canvas\n                var canvas = getCanvas(data.width, data.height);\n                var context = canvas.getContext('2d');\n                context.putImageData(data, 0, 0);\n\n                // Minimium 1 worker\n                nWorkers = nWorkers || 1;\n\n                // Height of the picture chunck for every worker\n                var blockSize = Math.floor(canvas.height / nWorkers);\n\n                return new Promise(function(resolve) {\n                    var finished = 0;\n                    var height = void 0;\n\n                    for (var index = 0; index < nWorkers; index++) {\n                        // In the last worker we have to make sure we process whatever is missing\n                        height = blockSize;\n\n                        if (index + 1 === nWorkers) {\n                            height = canvas.height - blockSize * index;\n                        }\n\n                        // Getting the picture\n                        var canvasData = context.getImageData(\n                            0,\n                            blockSize * index,\n                            canvas.width,\n                            height\n                        );\n                        var length = height * canvas.width * 4;\n\n                        worker\n                            .execute(canvasData, index, length, options)\n                            .then(function(response) {\n                                // Copying back canvas data to canvas\n                                // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                                // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                                context.putImageData(\n                                    response.result,\n                                    0,\n                                    blockSize * response.index\n                                );\n\n                                finished++;\n\n                                if (finished === nWorkers) {\n                                    resolve(\n                                        context.getImageData(\n                                            0,\n                                            0,\n                                            canvas.width,\n                                            canvas.height\n                                        )\n                                    );\n                                }\n                            });\n                    }\n                });\n            }\n\n            exports.getCanvas = getCanvas;\n            exports.convertImageDataToCanvasURL = convertImageDataToCanvasURL;\n            exports.applyFilter = applyFilter;\n        });\n    });\n    var lensCore_umd_1 = lensCore_umd.getCanvas;\n    var lensCore_umd_2 = lensCore_umd.convertImageDataToCanvasURL;\n    var lensCore_umd_3 = lensCore_umd.applyFilter;\n\n    /**\n     * Iterate over the array applying the grayscale transformation\n     * @param {Object} data\n     * @param {Number} length\n     */\n    var transform = function transform(_ref) {\n        var data = _ref.data,\n            length = _ref.length;\n\n        for (var i = 0; i < length; i += 4) {\n            var r = data[i];\n            var g = data[i + 1];\n            var b = data[i + 2];\n\n            // CIE luminance for the RGB\n            // The human eye is bad at seeing red and blue, so we de-emphasize them.\n            var v = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n            data[i] = data[i + 1] = data[i + 2] = v;\n        }\n\n        return data;\n    };\n\n    /**\n     * @param {ImageData} data - data of a image extracted from a canvas\n     * @param {Number} nWorkers - number of workers\n     * @returns {Promise}\n     */\n    function grayscale() {\n        var _ref2 =\n                arguments.length > 0 && arguments[0] !== undefined\n                    ? arguments[0]\n                    : {},\n            data = _ref2.data,\n            nWorkers = _ref2.nWorkers;\n\n        if (!data) {\n            throw new Error('lens-filter-grayscale:: invalid options provided');\n        }\n\n        return lensCore_umd_3({\n            data: data,\n            transform: transform,\n            nWorkers: nWorkers\n        });\n    }\n\n    exports.transform = transform;\n    exports.default = grayscale;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n});\n//# sourceMappingURL=lens-filter-grayscale.umd.js.map\n","(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? factory(exports)\n        : typeof define === 'function' && define.amd\n            ? define(['exports'], factory)\n            : factory((global.lensFilterInvert = {}));\n})(this, function(exports) {\n    'use strict';\n\n    var commonjsGlobal =\n        typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : typeof self !== 'undefined'\n                    ? self\n                    : {};\n\n    function createCommonjsModule(fn, module) {\n        return (\n            (module = { exports: {} }),\n            fn(module, module.exports),\n            module.exports\n        );\n    }\n\n    var lensCore_umd = createCommonjsModule(function(module, exports) {\n        (function(global, factory) {\n            factory();\n        })(commonjsGlobal, function() {\n            function e(e, t, n) {\n                e.addEventListener('message', function(r) {\n                    var o = r.data,\n                        a = o.id;\n                    if ('RPC' === o.type && null != a)\n                        if (o.method) {\n                            var s = t[o.method];\n                            null == s\n                                ? e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      error: 'NO_SUCH_METHOD'\n                                  })\n                                : Promise.resolve()\n                                      .then(function() {\n                                          return s.apply(null, o.params);\n                                      })\n                                      .then(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              result: t\n                                          });\n                                      })\n                                      .catch(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              error: '' + t\n                                          });\n                                      });\n                        } else {\n                            var i = n[a];\n                            if (null == i) throw Error('Unknown callback ' + a);\n                            delete n[a],\n                                o.error ? i[1](Error(o.error)) : i[0](o.result);\n                        }\n                });\n            }\n            function workerize(t, n) {\n                var r = this,\n                    o = {},\n                    a =\n                        '__xpo' +\n                        Math.random()\n                            .toString()\n                            .substring(2) +\n                        '__';\n                'function' == typeof t &&\n                    (t =\n                        '(' +\n                        Function.prototype.toString.call(t) +\n                        ')(' +\n                        a +\n                        ')'),\n                    (t =\n                        (function(e, t, n) {\n                            return (\n                                (e = (e = e.replace(\n                                    /^(\\s*)export\\s+default\\s+/m,\n                                    function(e, r) {\n                                        return (\n                                            (n.default = !0),\n                                            '' + r + t + '.default='\n                                        );\n                                    }\n                                )).replace(\n                                    /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n                                    function(e, r, o, a, s) {\n                                        return (\n                                            (n[s] = !0),\n                                            '' +\n                                                r +\n                                                t +\n                                                '.' +\n                                                s +\n                                                '=' +\n                                                o +\n                                                a +\n                                                s\n                                        );\n                                    }\n                                )),\n                                'var ' + t + '={};\\n' + e + '\\n' + t + ';'\n                            );\n                        })(t, a, o) +\n                        '\\n(' +\n                        Function.prototype.toString.call(e) +\n                        ')(self,' +\n                        a +\n                        ',{})');\n                var s,\n                    i = URL.createObjectURL(new Blob([t])),\n                    l = new Worker(i, n),\n                    c = l.terminate,\n                    u = {},\n                    p = 0;\n                for (s in ((l.kill = function(e) {\n                    l.postMessage({ type: 'KILL', signal: e }),\n                        setTimeout(l.terminate);\n                }),\n                (l.terminate = function() {\n                    URL.revokeObjectURL(i), c.call(r);\n                }),\n                (l.call = function(e, t) {\n                    return new Promise(function(n, r) {\n                        var o = 'rpc' + ++p;\n                        (u[o] = [n, r]),\n                            l.postMessage({\n                                type: 'RPC',\n                                id: o,\n                                method: e,\n                                params: t\n                            });\n                    });\n                }),\n                (l.rpcMethods = {}),\n                e(l, l.rpcMethods, u),\n                (l.expose = function(e) {\n                    l[s] = function() {\n                        return l.call(e, [].slice.call(arguments));\n                    };\n                }),\n                o)) {\n                    s in l || l.expose(s);\n                }\n                return l;\n            }\n\n            /**\n             * It returns a canvas with the given width and height\n             * @param {Number} w - width\n             * @param {Number} h - height\n             * @returns {Object}\n             */\n            function getCanvas(w, h) {\n                var canvas = document.createElement('canvas');\n                canvas.width = w;\n                canvas.height = h;\n\n                return canvas;\n            }\n\n            /**\n             * Given a ImageData it returns the dataURL\n             * @param {ImageData} imageData\n             * @returns {String}\n             */\n            function convertImageDataToCanvasURL(imageData) {\n                var canvas = window.document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                canvas.width = imageData.width;\n                canvas.height = imageData.height;\n                ctx.putImageData(imageData, 0, 0);\n\n                return canvas.toDataURL();\n            }\n\n            /**\n             * Given a worker file with the transformation the work is split\n             * between the configured number of workers and the transformation is applied\n             * returning a Promise\n             * @param {Object} data - image data\n             * @param {Function} transform - transformation function\n             * @param {Object} options - object to be passed to the transform function\n             * @param {Number} nWorkers - number of workers to transform the image\n             * @returns {Promise}\n             */\n            function applyFilter(_ref) {\n                var data = _ref.data,\n                    transform = _ref.transform,\n                    options = _ref.options,\n                    nWorkers = _ref.nWorkers;\n\n                var worker = workerize(\n                    '\\n        var transform = ' +\n                        transform +\n                        ';\\n\\n        export function execute(canvas, index, length, options) {\\n            canvas.data = transform({ \\n                data: canvas.data, \\n                length: length, \\n                options: options\\n            });\\n\\n            return { result: canvas, index: index };\\n        }\\n    '\n                );\n\n                // Drawing the source image into the target canvas\n                var canvas = getCanvas(data.width, data.height);\n                var context = canvas.getContext('2d');\n                context.putImageData(data, 0, 0);\n\n                // Minimium 1 worker\n                nWorkers = nWorkers || 1;\n\n                // Height of the picture chunck for every worker\n                var blockSize = Math.floor(canvas.height / nWorkers);\n\n                return new Promise(function(resolve) {\n                    var finished = 0;\n                    var height = void 0;\n\n                    for (var index = 0; index < nWorkers; index++) {\n                        // In the last worker we have to make sure we process whatever is missing\n                        height = blockSize;\n\n                        if (index + 1 === nWorkers) {\n                            height = canvas.height - blockSize * index;\n                        }\n\n                        // Getting the picture\n                        var canvasData = context.getImageData(\n                            0,\n                            blockSize * index,\n                            canvas.width,\n                            height\n                        );\n                        var length = height * canvas.width * 4;\n\n                        worker\n                            .execute(canvasData, index, length, options)\n                            .then(function(response) {\n                                // Copying back canvas data to canvas\n                                // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                                // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                                context.putImageData(\n                                    response.result,\n                                    0,\n                                    blockSize * response.index\n                                );\n\n                                finished++;\n\n                                if (finished === nWorkers) {\n                                    resolve(\n                                        context.getImageData(\n                                            0,\n                                            0,\n                                            canvas.width,\n                                            canvas.height\n                                        )\n                                    );\n                                }\n                            });\n                    }\n                });\n            }\n\n            exports.getCanvas = getCanvas;\n            exports.convertImageDataToCanvasURL = convertImageDataToCanvasURL;\n            exports.applyFilter = applyFilter;\n        });\n    });\n    var lensCore_umd_1 = lensCore_umd.getCanvas;\n    var lensCore_umd_2 = lensCore_umd.convertImageDataToCanvasURL;\n    var lensCore_umd_3 = lensCore_umd.applyFilter;\n\n    /**\n     * Iterate over the array applying the invert transformation\n     * @name transform\n     * @param {Object} data\n     * @param {Number} length\n     */\n    var transform = function transform(_ref) {\n        var data = _ref.data,\n            length = _ref.length;\n\n        for (var i = 0; i < length; i += 4) {\n            data[i] = 255 - data[i];\n            data[i + 1] = 255 - data[i + 1];\n            data[i + 2] = 255 - data[i + 2];\n        }\n\n        return data;\n    };\n\n    /**\n     * @name invert\n     * @param {ImageData} data - data of a image extracted from a canvas\n     * @param {Number} nWorkers - number of workers\n     * @returns {Promise}\n     */\n    function invert() {\n        var _ref2 =\n                arguments.length > 0 && arguments[0] !== undefined\n                    ? arguments[0]\n                    : {},\n            data = _ref2.data,\n            nWorkers = _ref2.nWorkers;\n\n        if (!data) {\n            throw new Error('lens-filter-invert:: invalid options provided');\n        }\n\n        return lensCore_umd_3({\n            data: data,\n            transform: transform,\n            nWorkers: nWorkers\n        });\n    }\n\n    exports.transform = transform;\n    exports.default = invert;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n});\n//# sourceMappingURL=lens-filter-grayscale.umd.js.map\n","(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? factory(exports)\n        : typeof define === 'function' && define.amd\n            ? define(['exports'], factory)\n            : factory((global.lensFilterNoise = {}));\n})(this, function(exports) {\n    'use strict';\n\n    var commonjsGlobal =\n        typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : typeof self !== 'undefined'\n                    ? self\n                    : {};\n\n    function createCommonjsModule(fn, module) {\n        return (\n            (module = { exports: {} }),\n            fn(module, module.exports),\n            module.exports\n        );\n    }\n\n    var lensCore_umd = createCommonjsModule(function(module, exports) {\n        (function(global, factory) {\n            factory();\n        })(commonjsGlobal, function() {\n            function e(e, t, n) {\n                e.addEventListener('message', function(r) {\n                    var o = r.data,\n                        a = o.id;\n                    if ('RPC' === o.type && null != a)\n                        if (o.method) {\n                            var s = t[o.method];\n                            null == s\n                                ? e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      error: 'NO_SUCH_METHOD'\n                                  })\n                                : Promise.resolve()\n                                      .then(function() {\n                                          return s.apply(null, o.params);\n                                      })\n                                      .then(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              result: t\n                                          });\n                                      })\n                                      .catch(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              error: '' + t\n                                          });\n                                      });\n                        } else {\n                            var i = n[a];\n                            if (null == i) throw Error('Unknown callback ' + a);\n                            delete n[a],\n                                o.error ? i[1](Error(o.error)) : i[0](o.result);\n                        }\n                });\n            }\n            function workerize(t, n) {\n                var r = this,\n                    o = {},\n                    a =\n                        '__xpo' +\n                        Math.random()\n                            .toString()\n                            .substring(2) +\n                        '__';\n                'function' == typeof t &&\n                    (t =\n                        '(' +\n                        Function.prototype.toString.call(t) +\n                        ')(' +\n                        a +\n                        ')'),\n                    (t =\n                        (function(e, t, n) {\n                            return (\n                                (e = (e = e.replace(\n                                    /^(\\s*)export\\s+default\\s+/m,\n                                    function(e, r) {\n                                        return (\n                                            (n.default = !0),\n                                            '' + r + t + '.default='\n                                        );\n                                    }\n                                )).replace(\n                                    /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n                                    function(e, r, o, a, s) {\n                                        return (\n                                            (n[s] = !0),\n                                            '' +\n                                                r +\n                                                t +\n                                                '.' +\n                                                s +\n                                                '=' +\n                                                o +\n                                                a +\n                                                s\n                                        );\n                                    }\n                                )),\n                                'var ' + t + '={};\\n' + e + '\\n' + t + ';'\n                            );\n                        })(t, a, o) +\n                        '\\n(' +\n                        Function.prototype.toString.call(e) +\n                        ')(self,' +\n                        a +\n                        ',{})');\n                var s,\n                    i = URL.createObjectURL(new Blob([t])),\n                    l = new Worker(i, n),\n                    c = l.terminate,\n                    u = {},\n                    p = 0;\n                for (s in ((l.kill = function(e) {\n                    l.postMessage({ type: 'KILL', signal: e }),\n                        setTimeout(l.terminate);\n                }),\n                (l.terminate = function() {\n                    URL.revokeObjectURL(i), c.call(r);\n                }),\n                (l.call = function(e, t) {\n                    return new Promise(function(n, r) {\n                        var o = 'rpc' + ++p;\n                        (u[o] = [n, r]),\n                            l.postMessage({\n                                type: 'RPC',\n                                id: o,\n                                method: e,\n                                params: t\n                            });\n                    });\n                }),\n                (l.rpcMethods = {}),\n                e(l, l.rpcMethods, u),\n                (l.expose = function(e) {\n                    l[s] = function() {\n                        return l.call(e, [].slice.call(arguments));\n                    };\n                }),\n                o)) {\n                    s in l || l.expose(s);\n                }\n                return l;\n            }\n\n            /**\n             * It returns a canvas with the given width and height\n             * @param {Number} w - width\n             * @param {Number} h - height\n             * @returns {Object}\n             */\n            function getCanvas(w, h) {\n                var canvas = document.createElement('canvas');\n                canvas.width = w;\n                canvas.height = h;\n\n                return canvas;\n            }\n\n            /**\n             * Given a ImageData it returns the dataURL\n             * @param {ImageData} imageData\n             * @returns {String}\n             */\n            function convertImageDataToCanvasURL(imageData) {\n                var canvas = window.document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                canvas.width = imageData.width;\n                canvas.height = imageData.height;\n                ctx.putImageData(imageData, 0, 0);\n\n                return canvas.toDataURL();\n            }\n\n            /**\n             * Given a worker file with the transformation the work is split\n             * between the configured number of workers and the transformation is applied\n             * returning a Promise\n             * @param {Object} data - image data\n             * @param {Function} transform - transformation function\n             * @param {Object} options - object to be passed to the transform function\n             * @param {Number} nWorkers - number of workers to transform the image\n             * @returns {Promise}\n             */\n            function applyFilter(_ref) {\n                var data = _ref.data,\n                    transform = _ref.transform,\n                    options = _ref.options,\n                    nWorkers = _ref.nWorkers;\n\n                var worker = workerize(\n                    '\\n        var transform = ' +\n                        transform +\n                        ';\\n\\n        export function execute(canvas, index, length, options) {\\n            canvas.data = transform({ \\n                data: canvas.data, \\n                length: length, \\n                options: options\\n            });\\n\\n            return { result: canvas, index: index };\\n        }\\n    '\n                );\n\n                // Drawing the source image into the target canvas\n                var canvas = getCanvas(data.width, data.height);\n                var context = canvas.getContext('2d');\n                context.putImageData(data, 0, 0);\n\n                // Minimium 1 worker\n                nWorkers = nWorkers || 1;\n\n                // Height of the picture chunck for every worker\n                var blockSize = Math.floor(canvas.height / nWorkers);\n\n                return new Promise(function(resolve) {\n                    var finished = 0;\n                    var height = void 0;\n\n                    for (var index = 0; index < nWorkers; index++) {\n                        // In the last worker we have to make sure we process whatever is missing\n                        height = blockSize;\n\n                        if (index + 1 === nWorkers) {\n                            height = canvas.height - blockSize * index;\n                        }\n\n                        // Getting the picture\n                        var canvasData = context.getImageData(\n                            0,\n                            blockSize * index,\n                            canvas.width,\n                            height\n                        );\n                        var length = height * canvas.width * 4;\n\n                        worker\n                            .execute(canvasData, index, length, options)\n                            .then(function(response) {\n                                // Copying back canvas data to canvas\n                                // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                                // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                                context.putImageData(\n                                    response.result,\n                                    0,\n                                    blockSize * response.index\n                                );\n\n                                finished++;\n\n                                if (finished === nWorkers) {\n                                    resolve(\n                                        context.getImageData(\n                                            0,\n                                            0,\n                                            canvas.width,\n                                            canvas.height\n                                        )\n                                    );\n                                }\n                            });\n                    }\n                });\n            }\n\n            exports.getCanvas = getCanvas;\n            exports.convertImageDataToCanvasURL = convertImageDataToCanvasURL;\n            exports.applyFilter = applyFilter;\n        });\n    });\n    var lensCore_umd_1 = lensCore_umd.getCanvas;\n    var lensCore_umd_2 = lensCore_umd.convertImageDataToCanvasURL;\n    var lensCore_umd_3 = lensCore_umd.applyFilter;\n\n    /**\n     * Iterate over the array applying the noise transformation\n     * @param {Array} data\n     * @param {Number} length\n     * @param {Object} options\n     * @param {Number} [options.adjustment]\n     */\n    var transform = function transform(_ref) {\n        var data = _ref.data,\n            length = _ref.length,\n            options = _ref.options;\n\n        var adjustment = Math.abs(options.adjustment) * 2.55;\n\n        var add = function add(original, increment) {\n            var result = original + increment;\n\n            if (result > 255) {\n                return 255;\n            } else if (result < 0) {\n                return 0;\n            }\n\n            return result;\n        };\n\n        for (var i = 0; i < length; i += 4) {\n            // Calculate if should be negative or positive\n            var multiplier = Math.random() < 0.5 ? -1 : 1;\n\n            // Calculate random noise\n            var rand = multiplier * (Math.random() + adjustment);\n\n            data[i] = add(data[i], rand);\n            data[i + 1] = add(data[i + 1], rand);\n            data[i + 2] = add(data[i + 2], rand);\n        }\n\n        return data;\n    };\n\n    /**\n     * @param {ImageData} data - data of a image extracted from a canvas\n     * @param {Object} options - options to pass to the transformation function\n     * @param {Number} [options.noise] - noise to apply in the transformation\n     * @param {Number} nWorkers - number of workers\n     * @returns {Promise}\n     */\n    function noise() {\n        var _ref2 =\n                arguments.length > 0 && arguments[0] !== undefined\n                    ? arguments[0]\n                    : {},\n            data = _ref2.data,\n            options = _ref2.options,\n            nWorkers = _ref2.nWorkers;\n\n        if (!data || !options || !options.adjustment) {\n            throw new Error('lens-filter-noise:: invalid options provided');\n        }\n\n        return lensCore_umd_3({\n            data: data,\n            transform: transform,\n            options: options,\n            nWorkers: nWorkers\n        });\n    }\n\n    exports.transform = transform;\n    exports.default = noise;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n});\n//# sourceMappingURL=lens-filter-noise.umd.js.map\n","(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? factory(exports)\n        : typeof define === 'function' && define.amd\n            ? define(['exports'], factory)\n            : factory((global.lensFilterSepia = {}));\n})(this, function(exports) {\n    'use strict';\n\n    var commonjsGlobal =\n        typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : typeof self !== 'undefined'\n                    ? self\n                    : {};\n\n    function createCommonjsModule(fn, module) {\n        return (\n            (module = { exports: {} }),\n            fn(module, module.exports),\n            module.exports\n        );\n    }\n\n    var lensCore_umd = createCommonjsModule(function(module, exports) {\n        (function(global, factory) {\n            factory();\n        })(commonjsGlobal, function() {\n            function e(e, t, n) {\n                e.addEventListener('message', function(r) {\n                    var o = r.data,\n                        a = o.id;\n                    if ('RPC' === o.type && null != a)\n                        if (o.method) {\n                            var s = t[o.method];\n                            null == s\n                                ? e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      error: 'NO_SUCH_METHOD'\n                                  })\n                                : Promise.resolve()\n                                      .then(function() {\n                                          return s.apply(null, o.params);\n                                      })\n                                      .then(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              result: t\n                                          });\n                                      })\n                                      .catch(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              error: '' + t\n                                          });\n                                      });\n                        } else {\n                            var i = n[a];\n                            if (null == i) throw Error('Unknown callback ' + a);\n                            delete n[a],\n                                o.error ? i[1](Error(o.error)) : i[0](o.result);\n                        }\n                });\n            }\n            function workerize(t, n) {\n                var r = this,\n                    o = {},\n                    a =\n                        '__xpo' +\n                        Math.random()\n                            .toString()\n                            .substring(2) +\n                        '__';\n                'function' == typeof t &&\n                    (t =\n                        '(' +\n                        Function.prototype.toString.call(t) +\n                        ')(' +\n                        a +\n                        ')'),\n                    (t =\n                        (function(e, t, n) {\n                            return (\n                                (e = (e = e.replace(\n                                    /^(\\s*)export\\s+default\\s+/m,\n                                    function(e, r) {\n                                        return (\n                                            (n.default = !0),\n                                            '' + r + t + '.default='\n                                        );\n                                    }\n                                )).replace(\n                                    /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n                                    function(e, r, o, a, s) {\n                                        return (\n                                            (n[s] = !0),\n                                            '' +\n                                                r +\n                                                t +\n                                                '.' +\n                                                s +\n                                                '=' +\n                                                o +\n                                                a +\n                                                s\n                                        );\n                                    }\n                                )),\n                                'var ' + t + '={};\\n' + e + '\\n' + t + ';'\n                            );\n                        })(t, a, o) +\n                        '\\n(' +\n                        Function.prototype.toString.call(e) +\n                        ')(self,' +\n                        a +\n                        ',{})');\n                var s,\n                    i = URL.createObjectURL(new Blob([t])),\n                    l = new Worker(i, n),\n                    c = l.terminate,\n                    u = {},\n                    p = 0;\n                for (s in ((l.kill = function(e) {\n                    l.postMessage({ type: 'KILL', signal: e }),\n                        setTimeout(l.terminate);\n                }),\n                (l.terminate = function() {\n                    URL.revokeObjectURL(i), c.call(r);\n                }),\n                (l.call = function(e, t) {\n                    return new Promise(function(n, r) {\n                        var o = 'rpc' + ++p;\n                        (u[o] = [n, r]),\n                            l.postMessage({\n                                type: 'RPC',\n                                id: o,\n                                method: e,\n                                params: t\n                            });\n                    });\n                }),\n                (l.rpcMethods = {}),\n                e(l, l.rpcMethods, u),\n                (l.expose = function(e) {\n                    l[s] = function() {\n                        return l.call(e, [].slice.call(arguments));\n                    };\n                }),\n                o)) {\n                    s in l || l.expose(s);\n                }\n                return l;\n            }\n\n            /**\n             * It returns a canvas with the given width and height\n             * @param {Number} w - width\n             * @param {Number} h - height\n             * @returns {Object}\n             */\n            function getCanvas(w, h) {\n                var canvas = document.createElement('canvas');\n                canvas.width = w;\n                canvas.height = h;\n\n                return canvas;\n            }\n\n            /**\n             * Given a ImageData it returns the dataURL\n             * @param {ImageData} imageData\n             * @returns {String}\n             */\n            function convertImageDataToCanvasURL(imageData) {\n                var canvas = window.document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                canvas.width = imageData.width;\n                canvas.height = imageData.height;\n                ctx.putImageData(imageData, 0, 0);\n\n                return canvas.toDataURL();\n            }\n\n            /**\n             * Given a worker file with the transformation the work is split\n             * between the configured number of workers and the transformation is applied\n             * returning a Promise\n             * @param {Object} data - image data\n             * @param {Function} transform - transformation function\n             * @param {Object} options - object to be passed to the transform function\n             * @param {Number} nWorkers - number of workers to transform the image\n             * @returns {Promise}\n             */\n            function applyFilter(_ref) {\n                var data = _ref.data,\n                    transform = _ref.transform,\n                    options = _ref.options,\n                    nWorkers = _ref.nWorkers;\n\n                var worker = workerize(\n                    '\\n        var transform = ' +\n                        transform +\n                        ';\\n\\n        export function execute(canvas, index, length, options) {\\n            canvas.data = transform({ \\n                data: canvas.data, \\n                length: length, \\n                options: options\\n            });\\n\\n            return { result: canvas, index: index };\\n        }\\n    '\n                );\n\n                // Drawing the source image into the target canvas\n                var canvas = getCanvas(data.width, data.height);\n                var context = canvas.getContext('2d');\n                context.putImageData(data, 0, 0);\n\n                // Minimium 1 worker\n                nWorkers = nWorkers || 1;\n\n                // Height of the picture chunck for every worker\n                var blockSize = Math.floor(canvas.height / nWorkers);\n\n                return new Promise(function(resolve) {\n                    var finished = 0;\n                    var height = void 0;\n\n                    for (var index = 0; index < nWorkers; index++) {\n                        // In the last worker we have to make sure we process whatever is missing\n                        height = blockSize;\n\n                        if (index + 1 === nWorkers) {\n                            height = canvas.height - blockSize * index;\n                        }\n\n                        // Getting the picture\n                        var canvasData = context.getImageData(\n                            0,\n                            blockSize * index,\n                            canvas.width,\n                            height\n                        );\n                        var length = height * canvas.width * 4;\n\n                        worker\n                            .execute(canvasData, index, length, options)\n                            .then(function(response) {\n                                // Copying back canvas data to canvas\n                                // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                                // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                                context.putImageData(\n                                    response.result,\n                                    0,\n                                    blockSize * response.index\n                                );\n\n                                finished++;\n\n                                if (finished === nWorkers) {\n                                    resolve(\n                                        context.getImageData(\n                                            0,\n                                            0,\n                                            canvas.width,\n                                            canvas.height\n                                        )\n                                    );\n                                }\n                            });\n                    }\n                });\n            }\n\n            exports.getCanvas = getCanvas;\n            exports.convertImageDataToCanvasURL = convertImageDataToCanvasURL;\n            exports.applyFilter = applyFilter;\n        });\n    });\n    var lensCore_umd_1 = lensCore_umd.getCanvas;\n    var lensCore_umd_2 = lensCore_umd.convertImageDataToCanvasURL;\n    var lensCore_umd_3 = lensCore_umd.applyFilter;\n\n    /**\n     * Iterate over the array applying the sepia transformation\n     * @param {Object} data\n     * @param {Number} length\n     */\n    var transform = function transform(_ref) {\n        var data = _ref.data,\n            length = _ref.length;\n\n        for (var i = 0; i < length; i += 4) {\n            var r = data[i];\n            var g = data[i + 1];\n            var b = data[i + 2];\n\n            data[i] = r * 0.393 + g * 0.769 + b * 0.189;\n            data[i + 1] = r * 0.349 + g * 0.686 + b * 0.168;\n            data[i + 2] = r * 0.272 + g * 0.534 + b * 0.131;\n        }\n\n        return data;\n    };\n\n    /**\n     * @param {ImageData} data - data of a image extracted from a canvas\n     * @param {Number} nWorkers - number of workers\n     * @returns {Promise}\n     */\n    function sepia() {\n        var _ref2 =\n                arguments.length > 0 && arguments[0] !== undefined\n                    ? arguments[0]\n                    : {},\n            data = _ref2.data,\n            nWorkers = _ref2.nWorkers;\n\n        if (!data) {\n            throw new Error('lens-filter-sepia:: invalid options provided');\n        }\n\n        return lensCore_umd_3({\n            data: data,\n            transform: transform,\n            nWorkers: nWorkers\n        });\n    }\n\n    exports.transform = transform;\n    exports.default = sepia;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n});\n//# sourceMappingURL=lens-filter-sepia.umd.js.map\n","(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? factory(exports)\n        : typeof define === 'function' && define.amd\n            ? define(['exports'], factory)\n            : factory((global.lensFilterThreshold = {}));\n})(this, function(exports) {\n    'use strict';\n\n    var commonjsGlobal =\n        typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : typeof self !== 'undefined'\n                    ? self\n                    : {};\n\n    function createCommonjsModule(fn, module) {\n        return (\n            (module = { exports: {} }),\n            fn(module, module.exports),\n            module.exports\n        );\n    }\n\n    var lensCore_umd = createCommonjsModule(function(module, exports) {\n        (function(global, factory) {\n            factory();\n        })(commonjsGlobal, function() {\n            function e(e, t, n) {\n                e.addEventListener('message', function(r) {\n                    var o = r.data,\n                        a = o.id;\n                    if ('RPC' === o.type && null != a)\n                        if (o.method) {\n                            var s = t[o.method];\n                            null == s\n                                ? e.postMessage({\n                                      type: 'RPC',\n                                      id: a,\n                                      error: 'NO_SUCH_METHOD'\n                                  })\n                                : Promise.resolve()\n                                      .then(function() {\n                                          return s.apply(null, o.params);\n                                      })\n                                      .then(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              result: t\n                                          });\n                                      })\n                                      .catch(function(t) {\n                                          e.postMessage({\n                                              type: 'RPC',\n                                              id: a,\n                                              error: '' + t\n                                          });\n                                      });\n                        } else {\n                            var i = n[a];\n                            if (null == i) throw Error('Unknown callback ' + a);\n                            delete n[a],\n                                o.error ? i[1](Error(o.error)) : i[0](o.result);\n                        }\n                });\n            }\n            function workerize(t, n) {\n                var r = this,\n                    o = {},\n                    a =\n                        '__xpo' +\n                        Math.random()\n                            .toString()\n                            .substring(2) +\n                        '__';\n                'function' == typeof t &&\n                    (t =\n                        '(' +\n                        Function.prototype.toString.call(t) +\n                        ')(' +\n                        a +\n                        ')'),\n                    (t =\n                        (function(e, t, n) {\n                            return (\n                                (e = (e = e.replace(\n                                    /^(\\s*)export\\s+default\\s+/m,\n                                    function(e, r) {\n                                        return (\n                                            (n.default = !0),\n                                            '' + r + t + '.default='\n                                        );\n                                    }\n                                )).replace(\n                                    /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n                                    function(e, r, o, a, s) {\n                                        return (\n                                            (n[s] = !0),\n                                            '' +\n                                                r +\n                                                t +\n                                                '.' +\n                                                s +\n                                                '=' +\n                                                o +\n                                                a +\n                                                s\n                                        );\n                                    }\n                                )),\n                                'var ' + t + '={};\\n' + e + '\\n' + t + ';'\n                            );\n                        })(t, a, o) +\n                        '\\n(' +\n                        Function.prototype.toString.call(e) +\n                        ')(self,' +\n                        a +\n                        ',{})');\n                var s,\n                    i = URL.createObjectURL(new Blob([t])),\n                    l = new Worker(i, n),\n                    c = l.terminate,\n                    u = {},\n                    p = 0;\n                for (s in ((l.kill = function(e) {\n                    l.postMessage({ type: 'KILL', signal: e }),\n                        setTimeout(l.terminate);\n                }),\n                (l.terminate = function() {\n                    URL.revokeObjectURL(i), c.call(r);\n                }),\n                (l.call = function(e, t) {\n                    return new Promise(function(n, r) {\n                        var o = 'rpc' + ++p;\n                        (u[o] = [n, r]),\n                            l.postMessage({\n                                type: 'RPC',\n                                id: o,\n                                method: e,\n                                params: t\n                            });\n                    });\n                }),\n                (l.rpcMethods = {}),\n                e(l, l.rpcMethods, u),\n                (l.expose = function(e) {\n                    l[s] = function() {\n                        return l.call(e, [].slice.call(arguments));\n                    };\n                }),\n                o)) {\n                    s in l || l.expose(s);\n                }\n                return l;\n            }\n\n            /**\n             * It returns a canvas with the given width and height\n             * @param {Number} w - width\n             * @param {Number} h - height\n             * @returns {Object}\n             */\n            function getCanvas(w, h) {\n                var canvas = document.createElement('canvas');\n                canvas.width = w;\n                canvas.height = h;\n\n                return canvas;\n            }\n\n            /**\n             * Given a ImageData it returns the dataURL\n             * @param {ImageData} imageData\n             * @returns {String}\n             */\n            function convertImageDataToCanvasURL(imageData) {\n                var canvas = window.document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                canvas.width = imageData.width;\n                canvas.height = imageData.height;\n                ctx.putImageData(imageData, 0, 0);\n\n                return canvas.toDataURL();\n            }\n\n            /**\n             * Given a worker file with the transformation the work is split\n             * between the configured number of workers and the transformation is applied\n             * returning a Promise\n             * @param {Object} data - image data\n             * @param {Function} transform - transformation function\n             * @param {Object} options - object to be passed to the transform function\n             * @param {Number} nWorkers - number of workers to transform the image\n             * @returns {Promise}\n             */\n            function applyFilter(_ref) {\n                var data = _ref.data,\n                    transform = _ref.transform,\n                    options = _ref.options,\n                    nWorkers = _ref.nWorkers;\n\n                var worker = workerize(\n                    '\\n        var transform = ' +\n                        transform +\n                        ';\\n\\n        export function execute(canvas, index, length, options) {\\n            canvas.data = transform({ \\n                data: canvas.data, \\n                length: length, \\n                options: options\\n            });\\n\\n            return { result: canvas, index: index };\\n        }\\n    '\n                );\n\n                // Drawing the source image into the target canvas\n                var canvas = getCanvas(data.width, data.height);\n                var context = canvas.getContext('2d');\n                context.putImageData(data, 0, 0);\n\n                // Minimium 1 worker\n                nWorkers = nWorkers || 1;\n\n                // Height of the picture chunck for every worker\n                var blockSize = Math.floor(canvas.height / nWorkers);\n\n                return new Promise(function(resolve) {\n                    var finished = 0;\n                    var height = void 0;\n\n                    for (var index = 0; index < nWorkers; index++) {\n                        // In the last worker we have to make sure we process whatever is missing\n                        height = blockSize;\n\n                        if (index + 1 === nWorkers) {\n                            height = canvas.height - blockSize * index;\n                        }\n\n                        // Getting the picture\n                        var canvasData = context.getImageData(\n                            0,\n                            blockSize * index,\n                            canvas.width,\n                            height\n                        );\n                        var length = height * canvas.width * 4;\n\n                        worker\n                            .execute(canvasData, index, length, options)\n                            .then(function(response) {\n                                // Copying back canvas data to canvas\n                                // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                                // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                                context.putImageData(\n                                    response.result,\n                                    0,\n                                    blockSize * response.index\n                                );\n\n                                finished++;\n\n                                if (finished === nWorkers) {\n                                    resolve(\n                                        context.getImageData(\n                                            0,\n                                            0,\n                                            canvas.width,\n                                            canvas.height\n                                        )\n                                    );\n                                }\n                            });\n                    }\n                });\n            }\n\n            exports.getCanvas = getCanvas;\n            exports.convertImageDataToCanvasURL = convertImageDataToCanvasURL;\n            exports.applyFilter = applyFilter;\n        });\n    });\n    var lensCore_umd_1 = lensCore_umd.getCanvas;\n    var lensCore_umd_2 = lensCore_umd.convertImageDataToCanvasURL;\n    var lensCore_umd_3 = lensCore_umd.applyFilter;\n\n    /**\n     * Iterate over the array applying the threshold transformation\n     * @param {Array} data\n     * @param {Number} length\n     * @param {Object} options\n     */\n    var transform = function transform(_ref) {\n        var data = _ref.data,\n            length = _ref.length,\n            options = _ref.options;\n\n        for (var i = 0; i < length; i += 4) {\n            var r = data[i];\n            var g = data[i + 1];\n            var b = data[i + 2];\n            var v =\n                0.2126 * r + 0.7152 * g + 0.0722 * b >= options.threshold\n                    ? 255\n                    : 0;\n            data[i] = data[i + 1] = data[i + 2] = v;\n        }\n\n        return data;\n    };\n\n    /**\n     * @param {ImageData} data - data of a image extracted from a canvas\n     * @param {Object} options - options to pass to the transformation function\n     * @param {Number} [options.threshold] - threshold to apply in the transformation\n     * @param {Number} nWorkers - number of workers\n     * @returns {Promise}\n     */\n    function threshold() {\n        var _ref2 =\n                arguments.length > 0 && arguments[0] !== undefined\n                    ? arguments[0]\n                    : {},\n            data = _ref2.data,\n            options = _ref2.options,\n            nWorkers = _ref2.nWorkers;\n\n        if (!data || !options || !options.threshold) {\n            throw new Error('lens-filter-threshold:: invalid options provided');\n        }\n\n        return lensCore_umd_3({\n            data: data,\n            transform: transform,\n            options: options,\n            nWorkers: nWorkers\n        });\n    }\n\n    exports.transform = transform;\n    exports.default = threshold;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n});\n//# sourceMappingURL=lens-filter-threshold.umd.js.map\n","/**\n * Gets image data from a give image tag\n * @param {Object} canvas - canvas\n * @param {Object} context - 2d canvas context\n * @param {DOMElement} element - DOM Element\n * @returns {Array} image data\n */\nexport function getPixelsFromImage(canvas, context, element) {\n    if (element.tagName !== 'IMG') {\n        throw new Error('lens-chainable:: invalid origin');\n    }\n\n    context.drawImage(element, 0, 0);\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * Get a dom nome by selector\n * @param {String} selector - DOM selector\n * @returns {DOMElement} - DOM Element\n */\nexport function getDomElement(selector) {\n    if (!selector) {\n        throw new Error('lens-chainable:: no selector provided');\n    }\n\n    const target = document.querySelectorAll(selector)[0];\n\n    if (!target) {\n        throw new Error('lens-chainable:: no \"to\" element found');\n    }\n\n    return target;\n}\n","import { convertImageDataToCanvasURL, getCanvas } from 'lens-core';\nimport brightness from 'lens-filter-brightness';\nimport color from 'lens-filter-color';\nimport colorize from 'lens-filter-colorize';\nimport contrast from 'lens-filter-contrast';\nimport gamma from 'lens-filter-gamma';\nimport grayscale from 'lens-filter-grayscale';\nimport invert from 'lens-filter-invert';\nimport noise from 'lens-filter-noise';\nimport sepia from 'lens-filter-sepia';\nimport threshold from 'lens-filter-threshold';\n\nimport { getDomElement, getPixelsFromImage } from './utils';\n\nconst METHODS = {\n    brightness,\n    color,\n    colorize,\n    contrast,\n    gamma,\n    grayscale,\n    invert,\n    noise,\n    sepia,\n    threshold\n};\n\n/**\n * Returns the a DOM element to a image\n * @param {Object} options - options to locate image source\n */\nconst getElement = options => {\n    if (options.url) {\n        const element = document.createElement('img');\n        element.setAttribute('src', options.url);\n\n        return element;\n    }\n\n    return getDomElement(options.from);\n};\n\n/**\n * Gets the image data from the source\n * @param {Object} options - options to locate image source\n * @returns {Array} image data\n */\nconst getImageData = options => {\n    if (options.data) return options.data;\n\n    const element = getElement(options);\n    const canvas = getCanvas(element.width, element.height);\n    const context = canvas.getContext('2d');\n\n    return getPixelsFromImage(canvas, context, element);\n};\n\nexport default class Chainable {\n    /**\n     * Initialize the chainable instance.\n     * @param {Object} options - options to locate image source\n     */\n    constructor(options = {}) {\n        if (!options.url && !options.data && !options.from) {\n            throw new Error('lens-chainable:: invalid options object');\n        }\n\n        this.data = getImageData(options);\n\n        if (!this.data) {\n            throw new Error('lens-chainable:: no data found');\n        }\n\n        this.filters = [];\n        this.nWorkers = options.nWorkers;\n        this.url = options.url;\n        this.from = options.from;\n    }\n\n    /**\n     * Applies the filters and returns a promise with the new image data.\n     * @returns {Promise<Array>} Promise resolved with the new image data\n     */\n    applyFilters() {\n        const initialValue = Promise.resolve(this.data);\n\n        return this.filters\n            .reduce(\n                (promise, item) =>\n                    promise.then(data => {\n                        const fn = METHODS[item.filter];\n                        const options = item.options;\n                        const nWorkers = this.nWorkers;\n\n                        return fn({ data, options, nWorkers });\n                    }),\n                initialValue\n            )\n            .then(data => {\n                this.data = data;\n                return data;\n            });\n    }\n\n    /**\n     * Creates a new image element and appends the result of\n     * the chainable operations to a given selector.\n     * @param {String} selector - DOM selector\n     * @returns {Promise} Promised resolved when the new image is appended\n     */\n    append(selector) {\n        return this.applyFilters().then(data => {\n            const target = getDomElement(selector);\n            const image = document.createElement('img');\n            image.setAttribute('src', convertImageDataToCanvasURL(data));\n            target.appendChild(image);\n        });\n    }\n\n    /**\n     * Updates a image element with the result of the chainable operations.\n     * @param {String} selector - DOM selector\n     * @returns {Promise} Promised resolved when the target image is updated\n     */\n    update(selector) {\n        return this.applyFilters().then(data => {\n            const target = getDomElement(selector);\n            target.setAttribute('src', convertImageDataToCanvasURL(data));\n        });\n    }\n\n    /**\n     * Returns the data url of the applied filters.\n     * @returns {Array} image data\n     */\n    getDataURL() {\n        return convertImageDataToCanvasURL(this.data);\n    }\n}\n\nObject.keys(METHODS).forEach(method => {\n    Chainable.prototype[method] = function(options) {\n        this.filters.push({ filter: method, options });\n        return this;\n    };\n});\n"],"names":["e","t","n","addEventListener","r","o","data","a","id","type","method","s","postMessage","error","Promise","resolve","then","apply","params","result","catch","i","Error","getCanvas","w","h","canvas","document","createElement","width","height","exports","imageData","window","ctx","getContext","putImageData","toDataURL","_ref","transform","options","nWorkers","worker","this","Math","random","toString","substring","Function","prototype","call","replace","default","URL","createObjectURL","Blob","l","Worker","c","terminate","u","p","kill","signal","setTimeout","revokeObjectURL","rpcMethods","expose","slice","arguments","workerize","context","blockSize","floor","finished","index","canvasData","getImageData","length","execute","response","factory","global","self","module","lensCore_umd","convertImageDataToCanvasURL","applyFilter","fn","lensCore_umd_3","adjustment","_ref2","undefined","Object","defineProperty","value","isNumeric","isNaN","parseFloat","isFinite","applyPixelTransformation","pixels","color","g","b","_loop","colorsInterval","forEach","colorInterval","red","green","blue","isMatch","from","to","match","noMatch","Array","isArray","hex","charAt","substr","colorRGB","parseInt","level","factor","contrast","pow","v","abs","add","original","increment","multiplier","rand","threshold","getDomElement","selector","target","querySelectorAll","METHODS","element","url","setAttribute","getElement","tagName","drawImage","getPixelsFromImage","Chainable","filters","initialValue","reduce","promise","item","filter","_this","applyFilters","image","appendChild","keys","push"],"mappings":"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"}