{"version":3,"file":"image-filter-brightness.umd.js","sources":["../../core/dist/image-filter-core.umd.js","../src/index.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (factory());\n}(this, (function () { 'use strict';\n\n    function e(e, t, n) {\n      e.addEventListener(\"message\", function (r) {\n        var o = r.data,\n            a = o.id;if (\"RPC\" === o.type && null != a) if (o.method) {\n          var s = t[o.method];null == s ? e.postMessage({ type: \"RPC\", id: a, error: \"NO_SUCH_METHOD\" }) : Promise.resolve().then(function () {\n            return s.apply(null, o.params);\n          }).then(function (t) {\n            e.postMessage({ type: \"RPC\", id: a, result: t });\n          }).catch(function (t) {\n            e.postMessage({ type: \"RPC\", id: a, error: \"\" + t });\n          });\n        } else {\n          var i = n[a];if (null == i) throw Error(\"Unknown callback \" + a);delete n[a], o.error ? i[1](Error(o.error)) : i[0](o.result);\n        }\n      });\n    }function workerize (t, n) {\n      var r = this,\n          o = {},\n          a = \"__xpo\" + Math.random().toString().substring(2) + \"__\";\"function\" == typeof t && (t = \"(\" + Function.prototype.toString.call(t) + \")(\" + a + \")\"), t = function (e, t, n) {\n        return e = (e = e.replace(/^(\\s*)export\\s+default\\s+/m, function (e, r) {\n          return n.default = !0, \"\" + r + t + \".default=\";\n        })).replace(/^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm, function (e, r, o, a, s) {\n          return n[s] = !0, \"\" + r + t + \".\" + s + \"=\" + o + a + s;\n        }), \"var \" + t + \"={};\\n\" + e + \"\\n\" + t + \";\";\n      }(t, a, o) + \"\\n(\" + Function.prototype.toString.call(e) + \")(self,\" + a + \",{})\";var s,\n          i = URL.createObjectURL(new Blob([t])),\n          l = new Worker(i, n),\n          c = l.terminate,\n          u = {},\n          p = 0;for (s in l.kill = function (e) {\n        l.postMessage({ type: \"KILL\", signal: e }), setTimeout(l.terminate);\n      }, l.terminate = function () {\n        URL.revokeObjectURL(i), c.call(r);\n      }, l.call = function (e, t) {\n        return new Promise(function (n, r) {\n          var o = \"rpc\" + ++p;u[o] = [n, r], l.postMessage({ type: \"RPC\", id: o, method: e, params: t });\n        });\n      }, l.rpcMethods = {}, e(l, l.rpcMethods, u), l.expose = function (e) {\n        l[s] = function () {\n          return l.call(e, [].slice.call(arguments));\n        };\n      }, o) {\n        s in l || l.expose(s);\n      }return l;\n    }\n\n    /**\n     * Given a worker file with the transformation the work is split\n     * between the configured number of workers and the transformation is applied\n     * returning a Promise\n     * @param {Object} data - image data\n     * @param {Function} transform - transformation function\n     * @param {Object} options - object to be passed to the transform function\n     * @param {Number} nWorkers - number of workers to transform the image\n     * @returns {Promise}\n     */\n    var applyFilter = function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(data, transform, options, nWorkers) {\n            var _this = this;\n\n            var worker, canvas, context, blockSize;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            worker = workerize('\\n        var transform = ' + transform + ';\\n\\n        export function execute(canvas, index, length, options) {\\n            transform(canvas.data, length, options);\\n            return { result: canvas, index };\\n        }\\n    ');\n\n                            // Drawing the source image into the target canvas\n\n                            canvas = getCanvas(data.width, data.height);\n                            context = canvas.getContext('2d');\n\n                            context.putImageData(data, 0, 0);\n\n                            // Minimium 1 worker\n                            nWorkers = nWorkers || 1;\n\n                            // Height of the picture chunck for every worker\n                            blockSize = Math.floor(canvas.height / nWorkers);\n                            return _context2.abrupt('return', new Promise(function () {\n                                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve) {\n                                    var finished, height, index, canvasData, length, response;\n                                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                                        while (1) {\n                                            switch (_context.prev = _context.next) {\n                                                case 0:\n                                                    finished = 0;\n                                                    height = void 0;\n                                                    index = 0;\n\n                                                case 3:\n                                                    if (!(index < nWorkers)) {\n                                                        _context.next = 17;\n                                                        break;\n                                                    }\n\n                                                    // In the last worker we have to make sure we process whatever is missing\n                                                    height = blockSize;\n\n                                                    if (index + 1 === nWorkers) {\n                                                        height = canvas.height - blockSize * index;\n                                                    }\n\n                                                    // Getting the picture\n                                                    canvasData = context.getImageData(0, blockSize * index, canvas.width, height);\n                                                    length = height * canvas.width * 4;\n                                                    _context.next = 10;\n                                                    return worker.execute(canvasData, index, length, options);\n\n                                                case 10:\n                                                    response = _context.sent;\n\n\n                                                    // Copying back canvas data to canvas\n                                                    // If the first webworker  (index 0) returns data, apply it at pixel (0, 0) onwards\n                                                    // If the second webworker  (index 1) returns data, apply it at pixel (0, canvas.height/4) onwards, and so on\n                                                    context.putImageData(response.result, 0, blockSize * response.index);\n\n                                                    finished++;\n\n                                                    if (finished === nWorkers) {\n                                                        resolve(context.getImageData(0, 0, canvas.width, canvas.height));\n                                                    }\n\n                                                case 14:\n                                                    index++;\n                                                    _context.next = 3;\n                                                    break;\n\n                                                case 17:\n                                                case 'end':\n                                                    return _context.stop();\n                                            }\n                                        }\n                                    }, _callee, _this);\n                                }));\n\n                                return function (_x5) {\n                                    return _ref2.apply(this, arguments);\n                                };\n                            }()));\n\n                        case 7:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this);\n        }));\n\n        return function applyFilter(_x, _x2, _x3, _x4) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n\n    function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n    /**\n     * It returns a canvas with the given width and height\n     * @param {Number} w - width\n     * @param {Number} h - height\n     * @returns {Object}\n     */\n    function getCanvas(w, h) {\n        var canvas = document.createElement('canvas');\n        canvas.width = w;\n        canvas.height = h;\n\n        return canvas;\n    }\n\n    /**\n     * Given a ImageData it returns the dataURL\n     * @param {ImageData} imageData\n     * @returns {String}\n     */\n    function convertImageDataToCanvasURL(imageData) {\n        var canvas = window.document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        canvas.width = imageData.width;\n        canvas.height = imageData.height;\n        ctx.putImageData(imageData, 0, 0);\n\n        return canvas.toDataURL();\n    }\n\n    module.exports = {\n        applyFilter: applyFilter,\n        convertImageDataToCanvasURL: convertImageDataToCanvasURL,\n        getCanvas: getCanvas\n    };\n\n})));\n//# sourceMappingURL=image-filter-core.umd.js.map\n","import { applyFilter } from 'image-filter-core';\n\n/**\n * Iterate over the array applying the brightness transformation\n * @param {Object} data\n * @param {Number} length\n * @param {Object} options\n * @param {Number} [options.adjustment]\n */\nexport const transform = (data, length, options) => {\n    for (let i = 0; i < length; i += 4) {\n        data[i] += options.adjustment;\n        data[i + 1] += options.adjustment;\n        data[i + 2] += options.adjustment;\n    }\n};\n\n\n/**\n * @param {ImageData} data - data of a image extracted from a canvas\n * @param {Object} options - options to pass to the transformation function\n * @param {Number} [options.adjustment] - adjustment to apply in the transformation\n * @param {Number} nWorkers - number of workers\n * @returns {Promise}\n */\nexport default function brightness(data, options, nWorkers) {\n    if (!data || !options || !options.adjustment) {\n        throw new Error('image-filter-brightness:: invalid options provided');\n    }\n\n    return applyFilter(data, transform, options, nWorkers);\n}\n"],"names":["global","factory","this","e","t","n","addEventListener","r","o","data","a","id","type","method","s","postMessage","error","Promise","resolve","then","apply","params","result","catch","i","Error","workerize","Math","random","toString","substring","Function","prototype","call","replace","default","URL","createObjectURL","Blob","l","Worker","c","terminate","u","p","kill","signal","setTimeout","revokeObjectURL","rpcMethods","expose","slice","arguments","applyFilter","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee2","transform","options","nWorkers","_this","worker","canvas","context","blockSize","wrap","_callee2$","_context2","prev","next","getCanvas","width","height","getContext","putImageData","floor","abrupt","_ref2","_callee","finished","index","canvasData","length","response","_callee$","_context","getImageData","execute","sent","stop","_x5","_x","_x2","_x3","_x4","fn","gen","reject","step","key","arg","info","value","done","err","w","h","document","createElement","convertImageDataToCanvasURL","imageData","window","ctx","toDataURL","module","adjustment","brightness"],"mappings":"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"}